/**
 * generated by Xtext 2.25.0
 */
package org.xtext.example.mydsl.myDsl.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.xtext.example.mydsl.myDsl.ExistenceSingularRefListPhrase;
import org.xtext.example.mydsl.myDsl.InheritanceStmt;
import org.xtext.example.mydsl.myDsl.MyDslPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Inheritance Stmt</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.InheritanceStmtImpl#getClass_ <em>Class</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.InheritanceStmtImpl#getSuperclass <em>Superclass</em>}</li>
 * </ul>
 *
 * @generated
 */
public class InheritanceStmtImpl extends StmtImpl implements InheritanceStmt
{
  /**
   * The cached value of the '{@link #getClass_() <em>Class</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getClass_()
   * @generated
   * @ordered
   */
  protected ExistenceSingularRefListPhrase class_;

  /**
   * The cached value of the '{@link #getSuperclass() <em>Superclass</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSuperclass()
   * @generated
   * @ordered
   */
  protected ExistenceSingularRefListPhrase superclass;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected InheritanceStmtImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MyDslPackage.Literals.INHERITANCE_STMT;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ExistenceSingularRefListPhrase getClass_()
  {
    return class_;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetClass(ExistenceSingularRefListPhrase newClass, NotificationChain msgs)
  {
    ExistenceSingularRefListPhrase oldClass = class_;
    class_ = newClass;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.INHERITANCE_STMT__CLASS, oldClass, newClass);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setClass(ExistenceSingularRefListPhrase newClass)
  {
    if (newClass != class_)
    {
      NotificationChain msgs = null;
      if (class_ != null)
        msgs = ((InternalEObject)class_).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.INHERITANCE_STMT__CLASS, null, msgs);
      if (newClass != null)
        msgs = ((InternalEObject)newClass).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.INHERITANCE_STMT__CLASS, null, msgs);
      msgs = basicSetClass(newClass, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.INHERITANCE_STMT__CLASS, newClass, newClass));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ExistenceSingularRefListPhrase getSuperclass()
  {
    return superclass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetSuperclass(ExistenceSingularRefListPhrase newSuperclass, NotificationChain msgs)
  {
    ExistenceSingularRefListPhrase oldSuperclass = superclass;
    superclass = newSuperclass;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.INHERITANCE_STMT__SUPERCLASS, oldSuperclass, newSuperclass);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setSuperclass(ExistenceSingularRefListPhrase newSuperclass)
  {
    if (newSuperclass != superclass)
    {
      NotificationChain msgs = null;
      if (superclass != null)
        msgs = ((InternalEObject)superclass).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.INHERITANCE_STMT__SUPERCLASS, null, msgs);
      if (newSuperclass != null)
        msgs = ((InternalEObject)newSuperclass).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.INHERITANCE_STMT__SUPERCLASS, null, msgs);
      msgs = basicSetSuperclass(newSuperclass, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.INHERITANCE_STMT__SUPERCLASS, newSuperclass, newSuperclass));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MyDslPackage.INHERITANCE_STMT__CLASS:
        return basicSetClass(null, msgs);
      case MyDslPackage.INHERITANCE_STMT__SUPERCLASS:
        return basicSetSuperclass(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MyDslPackage.INHERITANCE_STMT__CLASS:
        return getClass_();
      case MyDslPackage.INHERITANCE_STMT__SUPERCLASS:
        return getSuperclass();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MyDslPackage.INHERITANCE_STMT__CLASS:
        setClass((ExistenceSingularRefListPhrase)newValue);
        return;
      case MyDslPackage.INHERITANCE_STMT__SUPERCLASS:
        setSuperclass((ExistenceSingularRefListPhrase)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.INHERITANCE_STMT__CLASS:
        setClass((ExistenceSingularRefListPhrase)null);
        return;
      case MyDslPackage.INHERITANCE_STMT__SUPERCLASS:
        setSuperclass((ExistenceSingularRefListPhrase)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.INHERITANCE_STMT__CLASS:
        return class_ != null;
      case MyDslPackage.INHERITANCE_STMT__SUPERCLASS:
        return superclass != null;
    }
    return super.eIsSet(featureID);
  }

} //InheritanceStmtImpl

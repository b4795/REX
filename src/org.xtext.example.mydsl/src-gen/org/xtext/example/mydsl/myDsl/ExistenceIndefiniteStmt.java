/**
 * generated by Xtext 2.25.0
 */
package org.xtext.example.mydsl.myDsl;


/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Existence Indefinite Stmt</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.mydsl.myDsl.ExistenceIndefiniteStmt#getPlural <em>Plural</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.ExistenceIndefiniteStmt#getSingular <em>Singular</em>}</li>
 * </ul>
 *
 * @see org.xtext.example.mydsl.myDsl.MyDslPackage#getExistenceIndefiniteStmt()
 * @model
 * @generated
 */
public interface ExistenceIndefiniteStmt extends ExistenceStmt
{
  /**
   * Returns the value of the '<em><b>Plural</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Plural</em>' containment reference.
   * @see #setPlural(ExistencePluralIndefinitePhrase)
   * @see org.xtext.example.mydsl.myDsl.MyDslPackage#getExistenceIndefiniteStmt_Plural()
   * @model containment="true"
   * @generated
   */
  ExistencePluralIndefinitePhrase getPlural();

  /**
   * Sets the value of the '{@link org.xtext.example.mydsl.myDsl.ExistenceIndefiniteStmt#getPlural <em>Plural</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Plural</em>' containment reference.
   * @see #getPlural()
   * @generated
   */
  void setPlural(ExistencePluralIndefinitePhrase value);

  /**
   * Returns the value of the '<em><b>Singular</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Singular</em>' containment reference.
   * @see #setSingular(ExistenceSingularIndefinitePhrase)
   * @see org.xtext.example.mydsl.myDsl.MyDslPackage#getExistenceIndefiniteStmt_Singular()
   * @model containment="true"
   * @generated
   */
  ExistenceSingularIndefinitePhrase getSingular();

  /**
   * Sets the value of the '{@link org.xtext.example.mydsl.myDsl.ExistenceIndefiniteStmt#getSingular <em>Singular</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Singular</em>' containment reference.
   * @see #getSingular()
   * @generated
   */
  void setSingular(ExistenceSingularIndefinitePhrase value);

} // ExistenceIndefiniteStmt

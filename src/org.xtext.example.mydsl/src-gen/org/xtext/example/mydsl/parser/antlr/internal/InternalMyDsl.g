/*
 * generated by Xtext 2.25.0
 */
grammar InternalMyDsl;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.example.mydsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.example.mydsl.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.example.mydsl.services.MyDslGrammarAccess;

}

@parser::members {

 	private MyDslGrammarAccess grammarAccess;

    public InternalMyDslParser(TokenStream input, MyDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Model";
   	}

   	@Override
   	protected MyDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getModelAccess().getStmtStmtParserRuleCall_0());
			}
			lv_stmt_0_0=ruleStmt
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getModelRule());
				}
				add(
					$current,
					"stmt",
					lv_stmt_0_0,
					"org.xtext.example.mydsl.MyDsl.Stmt");
				afterParserOrEnumRuleCall();
			}
		)
	)*
;

// Entry rule entryRuleStmt
entryRuleStmt returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStmtRule()); }
	iv_ruleStmt=ruleStmt
	{ $current=$iv_ruleStmt.current; }
	EOF;

// Rule Stmt
ruleStmt returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getStmtAccess().getExistenceStmtParserRuleCall_0_0());
			}
			this_ExistenceStmt_0=ruleExistenceStmt
			{
				$current = $this_ExistenceStmt_0.current;
				afterParserOrEnumRuleCall();
			}
			    |
			{
				newCompositeNode(grammarAccess.getStmtAccess().getCompositionStmtParserRuleCall_0_1());
			}
			this_CompositionStmt_1=ruleCompositionStmt
			{
				$current = $this_CompositionStmt_1.current;
				afterParserOrEnumRuleCall();
			}
			    |
			{
				newCompositeNode(grammarAccess.getStmtAccess().getInheritanceStmtParserRuleCall_0_2());
			}
			this_InheritanceStmt_2=ruleInheritanceStmt
			{
				$current = $this_InheritanceStmt_2.current;
				afterParserOrEnumRuleCall();
			}
			    |
			{
				newCompositeNode(grammarAccess.getStmtAccess().getOperationStmtParserRuleCall_0_3());
			}
			this_OperationStmt_3=ruleOperationStmt
			{
				$current = $this_OperationStmt_3.current;
				afterParserOrEnumRuleCall();
			}
		)
		otherlv_4='.'
		{
			newLeafNode(otherlv_4, grammarAccess.getStmtAccess().getFullStopKeyword_1());
		}
	)
;

// Entry rule entryRuleExistenceStmt
entryRuleExistenceStmt returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExistenceStmtRule()); }
	iv_ruleExistenceStmt=ruleExistenceStmt
	{ $current=$iv_ruleExistenceStmt.current; }
	EOF;

// Rule ExistenceStmt
ruleExistenceStmt returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getExistenceStmtAccess().getExistenceDefiniteStmtParserRuleCall_0());
		}
		this_ExistenceDefiniteStmt_0=ruleExistenceDefiniteStmt
		{
			$current = $this_ExistenceDefiniteStmt_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExistenceStmtAccess().getExistenceIndefiniteStmtParserRuleCall_1());
		}
		this_ExistenceIndefiniteStmt_1=ruleExistenceIndefiniteStmt
		{
			$current = $this_ExistenceIndefiniteStmt_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleExistenceDefiniteStmt
entryRuleExistenceDefiniteStmt returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExistenceDefiniteStmtRule()); }
	iv_ruleExistenceDefiniteStmt=ruleExistenceDefiniteStmt
	{ $current=$iv_ruleExistenceDefiniteStmt.current; }
	EOF;

// Rule ExistenceDefiniteStmt
ruleExistenceDefiniteStmt returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='there_is_one'
		{
			newLeafNode(otherlv_0, grammarAccess.getExistenceDefiniteStmtAccess().getThere_is_oneKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getExistenceDefiniteStmtAccess().getDefiniteExistenceDefinitePhraseParserRuleCall_1_0());
				}
				lv_definite_1_0=ruleExistenceDefinitePhrase
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExistenceDefiniteStmtRule());
					}
					set(
						$current,
						"definite",
						lv_definite_1_0,
						"org.xtext.example.mydsl.MyDsl.ExistenceDefinitePhrase");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleExistenceDefinitePhrase
entryRuleExistenceDefinitePhrase returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExistenceDefinitePhraseRule()); }
	iv_ruleExistenceDefinitePhrase=ruleExistenceDefinitePhrase
	{ $current=$iv_ruleExistenceDefinitePhrase.current; }
	EOF;

// Rule ExistenceDefinitePhrase
ruleExistenceDefinitePhrase returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0=RULE_ID
			{
				newLeafNode(lv_name_0_0, grammarAccess.getExistenceDefinitePhraseAccess().getNameIDTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getExistenceDefinitePhraseRule());
				}
				setWithLastConsumed(
					$current,
					"name",
					lv_name_0_0,
					"org.eclipse.xtext.common.Terminals.ID");
			}
		)
	)
;

// Entry rule entryRuleExistenceDefiniteRefPhrase
entryRuleExistenceDefiniteRefPhrase returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExistenceDefiniteRefPhraseRule()); }
	iv_ruleExistenceDefiniteRefPhrase=ruleExistenceDefiniteRefPhrase
	{ $current=$iv_ruleExistenceDefiniteRefPhrase.current; }
	EOF;

// Rule ExistenceDefiniteRefPhrase
ruleExistenceDefiniteRefPhrase returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='the'
		{
			newLeafNode(otherlv_0, grammarAccess.getExistenceDefiniteRefPhraseAccess().getTheKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getExistenceDefiniteRefPhraseRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getExistenceDefiniteRefPhraseAccess().getRefExistenceDefinitePhraseCrossReference_1_0());
				}
			)
		)
	)
;

// Entry rule entryRuleExistenceDefiniteRefListPhrase
entryRuleExistenceDefiniteRefListPhrase returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExistenceDefiniteRefListPhraseRule()); }
	iv_ruleExistenceDefiniteRefListPhrase=ruleExistenceDefiniteRefListPhrase
	{ $current=$iv_ruleExistenceDefiniteRefListPhrase.current; }
	EOF;

// Rule ExistenceDefiniteRefListPhrase
ruleExistenceDefiniteRefListPhrase returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getExistenceDefiniteRefListPhraseAccess().getElementsExistenceDefiniteRefPhraseParserRuleCall_0_0());
				}
				lv_elements_0_0=ruleExistenceDefiniteRefPhrase
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExistenceDefiniteRefListPhraseRule());
					}
					add(
						$current,
						"elements",
						lv_elements_0_0,
						"org.xtext.example.mydsl.MyDsl.ExistenceDefiniteRefPhrase");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1=','
			{
				newLeafNode(otherlv_1, grammarAccess.getExistenceDefiniteRefListPhraseAccess().getCommaKeyword_1_0());
			}
			(
				otherlv_2='and'
				{
					newLeafNode(otherlv_2, grammarAccess.getExistenceDefiniteRefListPhraseAccess().getAndKeyword_1_1());
				}
			)?
			(
				(
					{
						newCompositeNode(grammarAccess.getExistenceDefiniteRefListPhraseAccess().getElementsExistenceDefiniteRefPhraseParserRuleCall_1_2_0());
					}
					lv_elements_3_0=ruleExistenceDefiniteRefPhrase
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExistenceDefiniteRefListPhraseRule());
						}
						add(
							$current,
							"elements",
							lv_elements_3_0,
							"org.xtext.example.mydsl.MyDsl.ExistenceDefiniteRefPhrase");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleExistenceIndefiniteStmt
entryRuleExistenceIndefiniteStmt returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExistenceIndefiniteStmtRule()); }
	iv_ruleExistenceIndefiniteStmt=ruleExistenceIndefiniteStmt
	{ $current=$iv_ruleExistenceIndefiniteStmt.current; }
	EOF;

// Rule ExistenceIndefiniteStmt
ruleExistenceIndefiniteStmt returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='there_are'
		{
			newLeafNode(otherlv_0, grammarAccess.getExistenceIndefiniteStmtAccess().getThere_areKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getExistenceIndefiniteStmtAccess().getPluralExistencePluralIndefinitePhraseParserRuleCall_1_0());
				}
				lv_plural_1_0=ruleExistencePluralIndefinitePhrase
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExistenceIndefiniteStmtRule());
					}
					set(
						$current,
						"plural",
						lv_plural_1_0,
						"org.xtext.example.mydsl.MyDsl.ExistencePluralIndefinitePhrase");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getExistenceIndefiniteStmtAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getExistenceIndefiniteStmtAccess().getSingularExistenceSingularIndefinitePhraseParserRuleCall_3_0());
				}
				lv_singular_3_0=ruleExistenceSingularIndefinitePhrase
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExistenceIndefiniteStmtRule());
					}
					set(
						$current,
						"singular",
						lv_singular_3_0,
						"org.xtext.example.mydsl.MyDsl.ExistenceSingularIndefinitePhrase");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4=')'
		{
			newLeafNode(otherlv_4, grammarAccess.getExistenceIndefiniteStmtAccess().getRightParenthesisKeyword_4());
		}
	)
;

// Entry rule entryRuleExistenceSingularIndefinitePhrase
entryRuleExistenceSingularIndefinitePhrase returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExistenceSingularIndefinitePhraseRule()); }
	iv_ruleExistenceSingularIndefinitePhrase=ruleExistenceSingularIndefinitePhrase
	{ $current=$iv_ruleExistenceSingularIndefinitePhrase.current; }
	EOF;

// Rule ExistenceSingularIndefinitePhrase
ruleExistenceSingularIndefinitePhrase returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0=RULE_ID
			{
				newLeafNode(lv_name_0_0, grammarAccess.getExistenceSingularIndefinitePhraseAccess().getNameIDTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getExistenceSingularIndefinitePhraseRule());
				}
				setWithLastConsumed(
					$current,
					"name",
					lv_name_0_0,
					"org.eclipse.xtext.common.Terminals.ID");
			}
		)
	)
;

// Entry rule entryRuleExistencePluralIndefinitePhrase
entryRuleExistencePluralIndefinitePhrase returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExistencePluralIndefinitePhraseRule()); }
	iv_ruleExistencePluralIndefinitePhrase=ruleExistencePluralIndefinitePhrase
	{ $current=$iv_ruleExistencePluralIndefinitePhrase.current; }
	EOF;

// Rule ExistencePluralIndefinitePhrase
ruleExistencePluralIndefinitePhrase returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0=RULE_ID
			{
				newLeafNode(lv_name_0_0, grammarAccess.getExistencePluralIndefinitePhraseAccess().getNameIDTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getExistencePluralIndefinitePhraseRule());
				}
				setWithLastConsumed(
					$current,
					"name",
					lv_name_0_0,
					"org.eclipse.xtext.common.Terminals.ID");
			}
		)
	)
;

// Entry rule entryRuleExistenceSingularIndefiniteRefPhrase
entryRuleExistenceSingularIndefiniteRefPhrase returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExistenceSingularIndefiniteRefPhraseRule()); }
	iv_ruleExistenceSingularIndefiniteRefPhrase=ruleExistenceSingularIndefiniteRefPhrase
	{ $current=$iv_ruleExistenceSingularIndefiniteRefPhrase.current; }
	EOF;

// Rule ExistenceSingularIndefiniteRefPhrase
ruleExistenceSingularIndefiniteRefPhrase returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='one'
			{
				newLeafNode(otherlv_0, grammarAccess.getExistenceSingularIndefiniteRefPhraseAccess().getOneKeyword_0_0());
			}
			    |
			otherlv_1='a'
			{
				newLeafNode(otherlv_1, grammarAccess.getExistenceSingularIndefiniteRefPhraseAccess().getAKeyword_0_1());
			}
			    |
			otherlv_2='an'
			{
				newLeafNode(otherlv_2, grammarAccess.getExistenceSingularIndefiniteRefPhraseAccess().getAnKeyword_0_2());
			}
		)
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getExistenceSingularIndefiniteRefPhraseRule());
					}
				}
				otherlv_3=RULE_ID
				{
					newLeafNode(otherlv_3, grammarAccess.getExistenceSingularIndefiniteRefPhraseAccess().getRefExistenceSingularIndefinitePhraseCrossReference_1_0());
				}
			)
		)
	)
;

// Entry rule entryRuleExistencePluralIndefiniteRefPhrase
entryRuleExistencePluralIndefiniteRefPhrase returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExistencePluralIndefiniteRefPhraseRule()); }
	iv_ruleExistencePluralIndefiniteRefPhrase=ruleExistencePluralIndefiniteRefPhrase
	{ $current=$iv_ruleExistencePluralIndefiniteRefPhrase.current; }
	EOF;

// Rule ExistencePluralIndefiniteRefPhrase
ruleExistencePluralIndefiniteRefPhrase returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			this_INT_0=RULE_INT
			{
				newLeafNode(this_INT_0, grammarAccess.getExistencePluralIndefiniteRefPhraseAccess().getINTTerminalRuleCall_0_0());
			}
			    |
			otherlv_1='one_or_more'
			{
				newLeafNode(otherlv_1, grammarAccess.getExistencePluralIndefiniteRefPhraseAccess().getOne_or_moreKeyword_0_1());
			}
			    |
			otherlv_2='zero_or_more'
			{
				newLeafNode(otherlv_2, grammarAccess.getExistencePluralIndefiniteRefPhraseAccess().getZero_or_moreKeyword_0_2());
			}
		)?
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getExistencePluralIndefiniteRefPhraseRule());
					}
				}
				otherlv_3=RULE_ID
				{
					newLeafNode(otherlv_3, grammarAccess.getExistencePluralIndefiniteRefPhraseAccess().getRefExistencePluralIndefinitePhraseCrossReference_1_0());
				}
			)
		)
	)
;

// Entry rule entryRuleExistenceSingularIndefiniteRefListPhrase
entryRuleExistenceSingularIndefiniteRefListPhrase returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExistenceSingularIndefiniteRefListPhraseRule()); }
	iv_ruleExistenceSingularIndefiniteRefListPhrase=ruleExistenceSingularIndefiniteRefListPhrase
	{ $current=$iv_ruleExistenceSingularIndefiniteRefListPhrase.current; }
	EOF;

// Rule ExistenceSingularIndefiniteRefListPhrase
ruleExistenceSingularIndefiniteRefListPhrase returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getExistenceSingularIndefiniteRefListPhraseAccess().getElementsExistenceSingularIndefiniteRefPhraseParserRuleCall_0_0());
				}
				lv_elements_0_0=ruleExistenceSingularIndefiniteRefPhrase
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExistenceSingularIndefiniteRefListPhraseRule());
					}
					add(
						$current,
						"elements",
						lv_elements_0_0,
						"org.xtext.example.mydsl.MyDsl.ExistenceSingularIndefiniteRefPhrase");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1=','
			{
				newLeafNode(otherlv_1, grammarAccess.getExistenceSingularIndefiniteRefListPhraseAccess().getCommaKeyword_1_0());
			}
			(
				otherlv_2='and'
				{
					newLeafNode(otherlv_2, grammarAccess.getExistenceSingularIndefiniteRefListPhraseAccess().getAndKeyword_1_1());
				}
			)?
			(
				(
					{
						newCompositeNode(grammarAccess.getExistenceSingularIndefiniteRefListPhraseAccess().getElementsExistenceSingularIndefiniteRefPhraseParserRuleCall_1_2_0());
					}
					lv_elements_3_0=ruleExistenceSingularIndefiniteRefPhrase
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExistenceSingularIndefiniteRefListPhraseRule());
						}
						add(
							$current,
							"elements",
							lv_elements_3_0,
							"org.xtext.example.mydsl.MyDsl.ExistenceSingularIndefiniteRefPhrase");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleExistencePluralIndefiniteRefListPhrase
entryRuleExistencePluralIndefiniteRefListPhrase returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExistencePluralIndefiniteRefListPhraseRule()); }
	iv_ruleExistencePluralIndefiniteRefListPhrase=ruleExistencePluralIndefiniteRefListPhrase
	{ $current=$iv_ruleExistencePluralIndefiniteRefListPhrase.current; }
	EOF;

// Rule ExistencePluralIndefiniteRefListPhrase
ruleExistencePluralIndefiniteRefListPhrase returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getExistencePluralIndefiniteRefListPhraseAccess().getElementsExistencePluralIndefiniteRefPhraseParserRuleCall_0_0());
				}
				lv_elements_0_0=ruleExistencePluralIndefiniteRefPhrase
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExistencePluralIndefiniteRefListPhraseRule());
					}
					add(
						$current,
						"elements",
						lv_elements_0_0,
						"org.xtext.example.mydsl.MyDsl.ExistencePluralIndefiniteRefPhrase");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1=','
			{
				newLeafNode(otherlv_1, grammarAccess.getExistencePluralIndefiniteRefListPhraseAccess().getCommaKeyword_1_0());
			}
			(
				otherlv_2='and'
				{
					newLeafNode(otherlv_2, grammarAccess.getExistencePluralIndefiniteRefListPhraseAccess().getAndKeyword_1_1());
				}
			)?
			(
				(
					{
						newCompositeNode(grammarAccess.getExistencePluralIndefiniteRefListPhraseAccess().getElementsExistencePluralIndefiniteRefPhraseParserRuleCall_1_2_0());
					}
					lv_elements_3_0=ruleExistencePluralIndefiniteRefPhrase
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExistencePluralIndefiniteRefListPhraseRule());
						}
						add(
							$current,
							"elements",
							lv_elements_3_0,
							"org.xtext.example.mydsl.MyDsl.ExistencePluralIndefiniteRefPhrase");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleExistenceSingularRefListPhrase
entryRuleExistenceSingularRefListPhrase returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExistenceSingularRefListPhraseRule()); }
	iv_ruleExistenceSingularRefListPhrase=ruleExistenceSingularRefListPhrase
	{ $current=$iv_ruleExistenceSingularRefListPhrase.current; }
	EOF;

// Rule ExistenceSingularRefListPhrase
ruleExistenceSingularRefListPhrase returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getExistenceSingularRefListPhraseAccess().getExistenceDefiniteRefListPhraseParserRuleCall_0());
		}
		this_ExistenceDefiniteRefListPhrase_0=ruleExistenceDefiniteRefListPhrase
		{
			$current = $this_ExistenceDefiniteRefListPhrase_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExistenceSingularRefListPhraseAccess().getExistenceSingularIndefiniteRefListPhraseParserRuleCall_1());
		}
		this_ExistenceSingularIndefiniteRefListPhrase_1=ruleExistenceSingularIndefiniteRefListPhrase
		{
			$current = $this_ExistenceSingularIndefiniteRefListPhrase_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleExistenceAnyRefListPhrase
entryRuleExistenceAnyRefListPhrase returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExistenceAnyRefListPhraseRule()); }
	iv_ruleExistenceAnyRefListPhrase=ruleExistenceAnyRefListPhrase
	{ $current=$iv_ruleExistenceAnyRefListPhrase.current; }
	EOF;

// Rule ExistenceAnyRefListPhrase
ruleExistenceAnyRefListPhrase returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getExistenceAnyRefListPhraseAccess().getExistenceDefiniteRefListPhraseParserRuleCall_0());
		}
		this_ExistenceDefiniteRefListPhrase_0=ruleExistenceDefiniteRefListPhrase
		{
			$current = $this_ExistenceDefiniteRefListPhrase_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExistenceAnyRefListPhraseAccess().getExistenceSingularIndefiniteRefListPhraseParserRuleCall_1());
		}
		this_ExistenceSingularIndefiniteRefListPhrase_1=ruleExistenceSingularIndefiniteRefListPhrase
		{
			$current = $this_ExistenceSingularIndefiniteRefListPhrase_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExistenceAnyRefListPhraseAccess().getExistencePluralIndefiniteRefListPhraseParserRuleCall_2());
		}
		this_ExistencePluralIndefiniteRefListPhrase_2=ruleExistencePluralIndefiniteRefListPhrase
		{
			$current = $this_ExistencePluralIndefiniteRefListPhrase_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleExistenceIndefiniteRefPhrase
entryRuleExistenceIndefiniteRefPhrase returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExistenceIndefiniteRefPhraseRule()); }
	iv_ruleExistenceIndefiniteRefPhrase=ruleExistenceIndefiniteRefPhrase
	{ $current=$iv_ruleExistenceIndefiniteRefPhrase.current; }
	EOF;

// Rule ExistenceIndefiniteRefPhrase
ruleExistenceIndefiniteRefPhrase returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getExistenceIndefiniteRefPhraseAccess().getExistenceSingularIndefiniteRefPhraseParserRuleCall_0());
		}
		this_ExistenceSingularIndefiniteRefPhrase_0=ruleExistenceSingularIndefiniteRefPhrase
		{
			$current = $this_ExistenceSingularIndefiniteRefPhrase_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExistenceIndefiniteRefPhraseAccess().getExistencePluralIndefiniteRefPhraseParserRuleCall_1());
		}
		this_ExistencePluralIndefiniteRefPhrase_1=ruleExistencePluralIndefiniteRefPhrase
		{
			$current = $this_ExistencePluralIndefiniteRefPhrase_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleCompositionStmt
entryRuleCompositionStmt returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCompositionStmtRule()); }
	iv_ruleCompositionStmt=ruleCompositionStmt
	{ $current=$iv_ruleCompositionStmt.current; }
	EOF;

// Rule CompositionStmt
ruleCompositionStmt returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getCompositionStmtAccess().getParentExistenceSingularRefListPhraseParserRuleCall_0_0());
				}
				lv_parent_0_0=ruleExistenceSingularRefListPhrase
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCompositionStmtRule());
					}
					set(
						$current,
						"parent",
						lv_parent_0_0,
						"org.xtext.example.mydsl.MyDsl.ExistenceSingularRefListPhrase");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1='has'
			{
				newLeafNode(otherlv_1, grammarAccess.getCompositionStmtAccess().getHasKeyword_1_0());
			}
			    |
			otherlv_2='is_composed_by'
			{
				newLeafNode(otherlv_2, grammarAccess.getCompositionStmtAccess().getIs_composed_byKeyword_1_1());
			}
			    |
			otherlv_3='contains'
			{
				newLeafNode(otherlv_3, grammarAccess.getCompositionStmtAccess().getContainsKeyword_1_2());
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getCompositionStmtAccess().getChildrenExistenceAnyRefListPhraseParserRuleCall_2_0());
				}
				lv_children_4_0=ruleExistenceAnyRefListPhrase
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCompositionStmtRule());
					}
					set(
						$current,
						"children",
						lv_children_4_0,
						"org.xtext.example.mydsl.MyDsl.ExistenceAnyRefListPhrase");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleInheritanceStmt
entryRuleInheritanceStmt returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInheritanceStmtRule()); }
	iv_ruleInheritanceStmt=ruleInheritanceStmt
	{ $current=$iv_ruleInheritanceStmt.current; }
	EOF;

// Rule InheritanceStmt
ruleInheritanceStmt returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getInheritanceStmtAccess().getClassExistenceSingularRefListPhraseParserRuleCall_0_0());
				}
				lv_class_0_0=ruleExistenceSingularRefListPhrase
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInheritanceStmtRule());
					}
					set(
						$current,
						"class",
						lv_class_0_0,
						"org.xtext.example.mydsl.MyDsl.ExistenceSingularRefListPhrase");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1='is'
			{
				newLeafNode(otherlv_1, grammarAccess.getInheritanceStmtAccess().getIsKeyword_1_0());
			}
			    |
			otherlv_2='are_each'
			{
				newLeafNode(otherlv_2, grammarAccess.getInheritanceStmtAccess().getAre_eachKeyword_1_1());
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getInheritanceStmtAccess().getSuperclassExistenceSingularRefListPhraseParserRuleCall_2_0());
				}
				lv_superclass_3_0=ruleExistenceSingularRefListPhrase
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInheritanceStmtRule());
					}
					set(
						$current,
						"superclass",
						lv_superclass_3_0,
						"org.xtext.example.mydsl.MyDsl.ExistenceSingularRefListPhrase");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleOperationStmt
entryRuleOperationStmt returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOperationStmtRule()); }
	iv_ruleOperationStmt=ruleOperationStmt
	{ $current=$iv_ruleOperationStmt.current; }
	EOF;

// Rule OperationStmt
ruleOperationStmt returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getOperationStmtAccess().getOperationDeclarationStmtParserRuleCall_0());
		}
		this_OperationDeclarationStmt_0=ruleOperationDeclarationStmt
		{
			$current = $this_OperationDeclarationStmt_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getOperationStmtAccess().getOperationDefinitionStmtParserRuleCall_1());
		}
		this_OperationDefinitionStmt_1=ruleOperationDefinitionStmt
		{
			$current = $this_OperationDefinitionStmt_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleOperationDeclarationStmt
entryRuleOperationDeclarationStmt returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOperationDeclarationStmtRule()); }
	iv_ruleOperationDeclarationStmt=ruleOperationDeclarationStmt
	{ $current=$iv_ruleOperationDeclarationStmt.current; }
	EOF;

// Rule OperationDeclarationStmt
ruleOperationDeclarationStmt returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='it_is_possible_that'
			{
				newLeafNode(otherlv_0, grammarAccess.getOperationDeclarationStmtAccess().getIt_is_possible_thatKeyword_0_0());
			}
			    |
			otherlv_1='it_is_possible_to'
			{
				newLeafNode(otherlv_1, grammarAccess.getOperationDeclarationStmtAccess().getIt_is_possible_toKeyword_0_1());
			}
			    |
			otherlv_2='it_is_possible'
			{
				newLeafNode(otherlv_2, grammarAccess.getOperationDeclarationStmtAccess().getIt_is_possibleKeyword_0_2());
			}
		)
		{
			newCompositeNode(grammarAccess.getOperationDeclarationStmtAccess().getOperationDeclarionHeaderStmtParserRuleCall_1());
		}
		this_OperationDeclarionHeaderStmt_3=ruleOperationDeclarionHeaderStmt
		{
			$current = $this_OperationDeclarionHeaderStmt_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleOperationDeclarionHeaderStmt
entryRuleOperationDeclarionHeaderStmt returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOperationDeclarionHeaderStmtRule()); }
	iv_ruleOperationDeclarionHeaderStmt=ruleOperationDeclarionHeaderStmt
	{ $current=$iv_ruleOperationDeclarionHeaderStmt.current; }
	EOF;

// Rule OperationDeclarionHeaderStmt
ruleOperationDeclarionHeaderStmt returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getOperationDeclarionHeaderStmtAccess().getParametersOperationParameterPhraseParserRuleCall_0());
			}
			lv_parameters_0_0=ruleOperationParameterPhrase
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getOperationDeclarionHeaderStmtRule());
				}
				add(
					$current,
					"parameters",
					lv_parameters_0_0,
					"org.xtext.example.mydsl.MyDsl.OperationParameterPhrase");
				afterParserOrEnumRuleCall();
			}
		)
	)+
;

// Entry rule entryRuleOperationParameterPhrase
entryRuleOperationParameterPhrase returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOperationParameterPhraseRule()); }
	iv_ruleOperationParameterPhrase=ruleOperationParameterPhrase
	{ $current=$iv_ruleOperationParameterPhrase.current; }
	EOF;

// Rule OperationParameterPhrase
ruleOperationParameterPhrase returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getOperationParameterPhraseAccess().getOperationParameterVariableDeclarationPhraseParserRuleCall_0());
		}
		this_OperationParameterVariableDeclarationPhrase_0=ruleOperationParameterVariableDeclarationPhrase
		{
			$current = $this_OperationParameterVariableDeclarationPhrase_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getOperationParameterPhraseAccess().getOperationParameterConnectionPhraseParserRuleCall_1());
		}
		this_OperationParameterConnectionPhrase_1=ruleOperationParameterConnectionPhrase
		{
			$current = $this_OperationParameterConnectionPhrase_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleOperationDefinitionStmt
entryRuleOperationDefinitionStmt returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOperationDefinitionStmtRule()); }
	iv_ruleOperationDefinitionStmt=ruleOperationDefinitionStmt
	{ $current=$iv_ruleOperationDefinitionStmt.current; }
	EOF;

// Rule OperationDefinitionStmt
ruleOperationDefinitionStmt returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='if'
		{
			newLeafNode(otherlv_0, grammarAccess.getOperationDefinitionStmtAccess().getIfKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getOperationDefinitionStmtAccess().getHeaderOperationDeclarionHeaderStmtParserRuleCall_1_0());
				}
				lv_header_1_0=ruleOperationDeclarionHeaderStmt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOperationDefinitionStmtRule());
					}
					set(
						$current,
						"header",
						lv_header_1_0,
						"org.xtext.example.mydsl.MyDsl.OperationDeclarionHeaderStmt");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=','
		{
			newLeafNode(otherlv_2, grammarAccess.getOperationDefinitionStmtAccess().getCommaKeyword_2());
		}
		otherlv_3='then'
		{
			newLeafNode(otherlv_3, grammarAccess.getOperationDefinitionStmtAccess().getThenKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getOperationDefinitionStmtAccess().getBodyOperationDefinitionBodyStmtsParserRuleCall_4_0());
				}
				lv_body_4_0=ruleOperationDefinitionBodyStmts
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOperationDefinitionStmtRule());
					}
					set(
						$current,
						"body",
						lv_body_4_0,
						"org.xtext.example.mydsl.MyDsl.OperationDefinitionBodyStmts");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleOperationDefinitionBodyStmts
entryRuleOperationDefinitionBodyStmts returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOperationDefinitionBodyStmtsRule()); }
	iv_ruleOperationDefinitionBodyStmts=ruleOperationDefinitionBodyStmts
	{ $current=$iv_ruleOperationDefinitionBodyStmts.current; }
	EOF;

// Rule OperationDefinitionBodyStmts
ruleOperationDefinitionBodyStmts returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getOperationDefinitionBodyStmtsAccess().getStmtsOperationDefinitionBodyStmtParserRuleCall_0_0());
				}
				lv_stmts_0_0=ruleOperationDefinitionBodyStmt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOperationDefinitionBodyStmtsRule());
					}
					add(
						$current,
						"stmts",
						lv_stmts_0_0,
						"org.xtext.example.mydsl.MyDsl.OperationDefinitionBodyStmt");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1=','
			{
				newLeafNode(otherlv_1, grammarAccess.getOperationDefinitionBodyStmtsAccess().getCommaKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getOperationDefinitionBodyStmtsAccess().getStmtsOperationDefinitionBodyStmtParserRuleCall_1_1_0());
					}
					lv_stmts_2_0=ruleOperationDefinitionBodyStmt
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOperationDefinitionBodyStmtsRule());
						}
						add(
							$current,
							"stmts",
							lv_stmts_2_0,
							"org.xtext.example.mydsl.MyDsl.OperationDefinitionBodyStmt");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleOperationDefinitionBodyStmt
entryRuleOperationDefinitionBodyStmt returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOperationDefinitionBodyStmtRule()); }
	iv_ruleOperationDefinitionBodyStmt=ruleOperationDefinitionBodyStmt
	{ $current=$iv_ruleOperationDefinitionBodyStmt.current; }
	EOF;

// Rule OperationDefinitionBodyStmt
ruleOperationDefinitionBodyStmt returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getOperationDefinitionBodyStmtAccess().getOperationDefinitionBodyUnconditionalStmtParserRuleCall_0());
		}
		this_OperationDefinitionBodyUnconditionalStmt_0=ruleOperationDefinitionBodyUnconditionalStmt
		{
			$current = $this_OperationDefinitionBodyUnconditionalStmt_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getOperationDefinitionBodyStmtAccess().getOperationDefinitionBodyConditionalStmtParserRuleCall_1());
		}
		this_OperationDefinitionBodyConditionalStmt_1=ruleOperationDefinitionBodyConditionalStmt
		{
			$current = $this_OperationDefinitionBodyConditionalStmt_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleOperationDefinitionBodyUnconditionalStmt
entryRuleOperationDefinitionBodyUnconditionalStmt returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOperationDefinitionBodyUnconditionalStmtRule()); }
	iv_ruleOperationDefinitionBodyUnconditionalStmt=ruleOperationDefinitionBodyUnconditionalStmt
	{ $current=$iv_ruleOperationDefinitionBodyUnconditionalStmt.current; }
	EOF;

// Rule OperationDefinitionBodyUnconditionalStmt
ruleOperationDefinitionBodyUnconditionalStmt returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getOperationDefinitionBodyUnconditionalStmtAccess().getOperationDefinitionBodyUnconditionalPhraseParserRuleCall());
	}
	this_OperationDefinitionBodyUnconditionalPhrase_0=ruleOperationDefinitionBodyUnconditionalPhrase
	{
		$current = $this_OperationDefinitionBodyUnconditionalPhrase_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleOperationDefinitionBodyUnconditionalPhrase
entryRuleOperationDefinitionBodyUnconditionalPhrase returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOperationDefinitionBodyUnconditionalPhraseRule()); }
	iv_ruleOperationDefinitionBodyUnconditionalPhrase=ruleOperationDefinitionBodyUnconditionalPhrase
	{ $current=$iv_ruleOperationDefinitionBodyUnconditionalPhrase.current; }
	EOF;

// Rule OperationDefinitionBodyUnconditionalPhrase
ruleOperationDefinitionBodyUnconditionalPhrase returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getOperationDefinitionBodyUnconditionalPhraseAccess().getOperationDefinitionBodyFunctionCallPhraseParserRuleCall_0());
		}
		this_OperationDefinitionBodyFunctionCallPhrase_0=ruleOperationDefinitionBodyFunctionCallPhrase
		{
			$current = $this_OperationDefinitionBodyFunctionCallPhrase_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getOperationDefinitionBodyUnconditionalPhraseAccess().getOperationDefinitionBodyVariableDeclarationPhraseParserRuleCall_1());
		}
		this_OperationDefinitionBodyVariableDeclarationPhrase_1=ruleOperationDefinitionBodyVariableDeclarationPhrase
		{
			$current = $this_OperationDefinitionBodyVariableDeclarationPhrase_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleOperationDefinitionBodyFunctionCallPhrase
entryRuleOperationDefinitionBodyFunctionCallPhrase returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOperationDefinitionBodyFunctionCallPhraseRule()); }
	iv_ruleOperationDefinitionBodyFunctionCallPhrase=ruleOperationDefinitionBodyFunctionCallPhrase
	{ $current=$iv_ruleOperationDefinitionBodyFunctionCallPhrase.current; }
	EOF;

// Rule OperationDefinitionBodyFunctionCallPhrase
ruleOperationDefinitionBodyFunctionCallPhrase returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getOperationDefinitionBodyFunctionCallPhraseAccess().getArgumentsOperationDefinitionBodyFunctionCallArgumentsPhraseParserRuleCall_0());
			}
			lv_arguments_0_0=ruleOperationDefinitionBodyFunctionCallArgumentsPhrase
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getOperationDefinitionBodyFunctionCallPhraseRule());
				}
				add(
					$current,
					"arguments",
					lv_arguments_0_0,
					"org.xtext.example.mydsl.MyDsl.OperationDefinitionBodyFunctionCallArgumentsPhrase");
				afterParserOrEnumRuleCall();
			}
		)
	)+
;

// Entry rule entryRuleOperationDefinitionBodyFunctionCallArgumentsPhrase
entryRuleOperationDefinitionBodyFunctionCallArgumentsPhrase returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOperationDefinitionBodyFunctionCallArgumentsPhraseRule()); }
	iv_ruleOperationDefinitionBodyFunctionCallArgumentsPhrase=ruleOperationDefinitionBodyFunctionCallArgumentsPhrase
	{ $current=$iv_ruleOperationDefinitionBodyFunctionCallArgumentsPhrase.current; }
	EOF;

// Rule OperationDefinitionBodyFunctionCallArgumentsPhrase
ruleOperationDefinitionBodyFunctionCallArgumentsPhrase returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getOperationDefinitionBodyFunctionCallArgumentsPhraseAccess().getOperationDefinitionBodyFunctionCallInRefsRefPhraseParserRuleCall_0());
		}
		this_OperationDefinitionBodyFunctionCallInRefsRefPhrase_0=ruleOperationDefinitionBodyFunctionCallInRefsRefPhrase
		{
			$current = $this_OperationDefinitionBodyFunctionCallInRefsRefPhrase_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getOperationDefinitionBodyFunctionCallArgumentsPhraseAccess().getInstanceRefPhraseParserRuleCall_1());
		}
		this_InstanceRefPhrase_1=ruleInstanceRefPhrase
		{
			$current = $this_InstanceRefPhrase_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getOperationDefinitionBodyFunctionCallArgumentsPhraseAccess().getOperationParameterConnectionBuiltinRefPhraseParserRuleCall_2());
		}
		this_OperationParameterConnectionBuiltinRefPhrase_2=ruleOperationParameterConnectionBuiltinRefPhrase
		{
			$current = $this_OperationParameterConnectionBuiltinRefPhrase_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleOperationDefinitionBodyFunctionCallInRefsRefPhrase
entryRuleOperationDefinitionBodyFunctionCallInRefsRefPhrase returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOperationDefinitionBodyFunctionCallInRefsRefPhraseRule()); }
	iv_ruleOperationDefinitionBodyFunctionCallInRefsRefPhrase=ruleOperationDefinitionBodyFunctionCallInRefsRefPhrase
	{ $current=$iv_ruleOperationDefinitionBodyFunctionCallInRefsRefPhrase.current; }
	EOF;

// Rule OperationDefinitionBodyFunctionCallInRefsRefPhrase
ruleOperationDefinitionBodyFunctionCallInRefsRefPhrase returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getOperationDefinitionBodyFunctionCallInRefsRefPhraseRule());
				}
			}
			otherlv_0=RULE_ID
			{
				newLeafNode(otherlv_0, grammarAccess.getOperationDefinitionBodyFunctionCallInRefsRefPhraseAccess().getRefOperationDefinitionBodyFunctionCallInRefsPhraseCrossReference_0());
			}
		)
	)
;

// Entry rule entryRuleOperationDefinitionBodyFunctionCallInRefsObjectsPhrase
entryRuleOperationDefinitionBodyFunctionCallInRefsObjectsPhrase returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOperationDefinitionBodyFunctionCallInRefsObjectsPhraseRule()); }
	iv_ruleOperationDefinitionBodyFunctionCallInRefsObjectsPhrase=ruleOperationDefinitionBodyFunctionCallInRefsObjectsPhrase
	{ $current=$iv_ruleOperationDefinitionBodyFunctionCallInRefsObjectsPhrase.current; }
	EOF;

// Rule OperationDefinitionBodyFunctionCallInRefsObjectsPhrase
ruleOperationDefinitionBodyFunctionCallInRefsObjectsPhrase returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getOperationDefinitionBodyFunctionCallInRefsObjectsPhraseAccess().getOperationParameterVariableDeclarationPhraseParserRuleCall_0());
		}
		this_OperationParameterVariableDeclarationPhrase_0=ruleOperationParameterVariableDeclarationPhrase
		{
			$current = $this_OperationParameterVariableDeclarationPhrase_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getOperationDefinitionBodyFunctionCallInRefsObjectsPhraseAccess().getOperationDefinitionBodyVariableDeclarationPhraseParserRuleCall_1());
		}
		this_OperationDefinitionBodyVariableDeclarationPhrase_1=ruleOperationDefinitionBodyVariableDeclarationPhrase
		{
			$current = $this_OperationDefinitionBodyVariableDeclarationPhrase_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleOperationDefinitionBodyVariableDeclarationPhrase
entryRuleOperationDefinitionBodyVariableDeclarationPhrase returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOperationDefinitionBodyVariableDeclarationPhraseRule()); }
	iv_ruleOperationDefinitionBodyVariableDeclarationPhrase=ruleOperationDefinitionBodyVariableDeclarationPhrase
	{ $current=$iv_ruleOperationDefinitionBodyVariableDeclarationPhrase.current; }
	EOF;

// Rule OperationDefinitionBodyVariableDeclarationPhrase
ruleOperationDefinitionBodyVariableDeclarationPhrase returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='there_is_one'
		{
			newLeafNode(otherlv_0, grammarAccess.getOperationDefinitionBodyVariableDeclarationPhraseAccess().getThere_is_oneKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getOperationDefinitionBodyVariableDeclarationPhraseRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getOperationDefinitionBodyVariableDeclarationPhraseAccess().getTypeExistenceSingularIndefinitePhraseCrossReference_1_0());
				}
			)
		)
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getOperationDefinitionBodyVariableDeclarationPhraseAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getOperationDefinitionBodyVariableDeclarationPhraseRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleOperationDefinitionBodyConditionalStmt
entryRuleOperationDefinitionBodyConditionalStmt returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOperationDefinitionBodyConditionalStmtRule()); }
	iv_ruleOperationDefinitionBodyConditionalStmt=ruleOperationDefinitionBodyConditionalStmt
	{ $current=$iv_ruleOperationDefinitionBodyConditionalStmt.current; }
	EOF;

// Rule OperationDefinitionBodyConditionalStmt
ruleOperationDefinitionBodyConditionalStmt returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='if'
		{
			newLeafNode(otherlv_0, grammarAccess.getOperationDefinitionBodyConditionalStmtAccess().getIfKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getOperationDefinitionBodyConditionalStmtAccess().getConditionOperationDefinitionBodyFunctionCallPhraseParserRuleCall_1_0());
				}
				lv_condition_1_0=ruleOperationDefinitionBodyFunctionCallPhrase
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOperationDefinitionBodyConditionalStmtRule());
					}
					set(
						$current,
						"condition",
						lv_condition_1_0,
						"org.xtext.example.mydsl.MyDsl.OperationDefinitionBodyFunctionCallPhrase");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=','
		{
			newLeafNode(otherlv_2, grammarAccess.getOperationDefinitionBodyConditionalStmtAccess().getCommaKeyword_2());
		}
		otherlv_3='then'
		{
			newLeafNode(otherlv_3, grammarAccess.getOperationDefinitionBodyConditionalStmtAccess().getThenKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getOperationDefinitionBodyConditionalStmtAccess().getThenBodyOperationDefinitionBodyStmtsParserRuleCall_4_0());
				}
				lv_thenBody_4_0=ruleOperationDefinitionBodyStmts
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOperationDefinitionBodyConditionalStmtRule());
					}
					set(
						$current,
						"thenBody",
						lv_thenBody_4_0,
						"org.xtext.example.mydsl.MyDsl.OperationDefinitionBodyStmts");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_5=';'
			{
				newLeafNode(otherlv_5, grammarAccess.getOperationDefinitionBodyConditionalStmtAccess().getSemicolonKeyword_5_0());
			}
			otherlv_6='else'
			{
				newLeafNode(otherlv_6, grammarAccess.getOperationDefinitionBodyConditionalStmtAccess().getElseKeyword_5_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getOperationDefinitionBodyConditionalStmtAccess().getElseBodyOperationDefinitionBodyStmtsParserRuleCall_5_2_0());
					}
					lv_elseBody_7_0=ruleOperationDefinitionBodyStmts
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOperationDefinitionBodyConditionalStmtRule());
						}
						set(
							$current,
							"elseBody",
							lv_elseBody_7_0,
							"org.xtext.example.mydsl.MyDsl.OperationDefinitionBodyStmts");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleOperationParameterVariableDeclarationPhrase
entryRuleOperationParameterVariableDeclarationPhrase returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOperationParameterVariableDeclarationPhraseRule()); }
	iv_ruleOperationParameterVariableDeclarationPhrase=ruleOperationParameterVariableDeclarationPhrase
	{ $current=$iv_ruleOperationParameterVariableDeclarationPhrase.current; }
	EOF;

// Rule OperationParameterVariableDeclarationPhrase
ruleOperationParameterVariableDeclarationPhrase returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getOperationParameterVariableDeclarationPhraseAccess().getTypeExistenceIndefiniteRefPhraseParserRuleCall_0_0());
				}
				lv_type_0_0=ruleExistenceIndefiniteRefPhrase
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOperationParameterVariableDeclarationPhraseRule());
					}
					set(
						$current,
						"type",
						lv_type_0_0,
						"org.xtext.example.mydsl.MyDsl.ExistenceIndefiniteRefPhrase");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getOperationParameterVariableDeclarationPhraseAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getOperationParameterVariableDeclarationPhraseRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleOperationParameterConnectionPhrase
entryRuleOperationParameterConnectionPhrase returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOperationParameterConnectionPhraseRule()); }
	iv_ruleOperationParameterConnectionPhrase=ruleOperationParameterConnectionPhrase
	{ $current=$iv_ruleOperationParameterConnectionPhrase.current; }
	EOF;

// Rule OperationParameterConnectionPhrase
ruleOperationParameterConnectionPhrase returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_1=RULE_ID
				{
					newLeafNode(lv_name_0_1, grammarAccess.getOperationParameterConnectionPhraseAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getOperationParameterConnectionPhraseRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_1,
						"org.eclipse.xtext.common.Terminals.ID");
				}
				    |
				lv_name_0_2='is'
				{
					newLeafNode(lv_name_0_2, grammarAccess.getOperationParameterConnectionPhraseAccess().getNameIsKeyword_0_1());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getOperationParameterConnectionPhraseRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_2, null);
				}
				    |
				lv_name_0_3='and'
				{
					newLeafNode(lv_name_0_3, grammarAccess.getOperationParameterConnectionPhraseAccess().getNameAndKeyword_0_2());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getOperationParameterConnectionPhraseRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_3, null);
				}
				    |
				lv_name_0_4='or'
				{
					newLeafNode(lv_name_0_4, grammarAccess.getOperationParameterConnectionPhraseAccess().getNameOrKeyword_0_3());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getOperationParameterConnectionPhraseRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_4, null);
				}
			)
		)
	)
;

// Entry rule entryRuleOperationParameterConnectionBuiltinRefPhrase
entryRuleOperationParameterConnectionBuiltinRefPhrase returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOperationParameterConnectionBuiltinRefPhraseRule()); }
	iv_ruleOperationParameterConnectionBuiltinRefPhrase=ruleOperationParameterConnectionBuiltinRefPhrase
	{ $current=$iv_ruleOperationParameterConnectionBuiltinRefPhrase.current; }
	EOF;

// Rule OperationParameterConnectionBuiltinRefPhrase
ruleOperationParameterConnectionBuiltinRefPhrase returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_1='is'
				{
					newLeafNode(lv_name_0_1, grammarAccess.getOperationParameterConnectionBuiltinRefPhraseAccess().getNameIsKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getOperationParameterConnectionBuiltinRefPhraseRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_1, null);
				}
				    |
				lv_name_0_2='and'
				{
					newLeafNode(lv_name_0_2, grammarAccess.getOperationParameterConnectionBuiltinRefPhraseAccess().getNameAndKeyword_0_1());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getOperationParameterConnectionBuiltinRefPhraseRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_2, null);
				}
				    |
				lv_name_0_3='or'
				{
					newLeafNode(lv_name_0_3, grammarAccess.getOperationParameterConnectionBuiltinRefPhraseAccess().getNameOrKeyword_0_2());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getOperationParameterConnectionBuiltinRefPhraseRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_3, null);
				}
			)
		)
	)
;

// Entry rule entryRuleInstanceRefPhrase
entryRuleInstanceRefPhrase returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInstanceRefPhraseRule()); }
	iv_ruleInstanceRefPhrase=ruleInstanceRefPhrase
	{ $current=$iv_ruleInstanceRefPhrase.current; }
	EOF;

// Rule InstanceRefPhrase
ruleInstanceRefPhrase returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getInstanceRefPhraseAccess().getFInstanceDirectRefPhraseParserRuleCall_0_0());
				}
				lv_f_0_0=ruleInstanceDirectRefPhrase
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInstanceRefPhraseRule());
					}
					set(
						$current,
						"f",
						lv_f_0_0,
						"org.xtext.example.mydsl.MyDsl.InstanceDirectRefPhrase");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			otherlv_1='the'
			{
				newLeafNode(otherlv_1, grammarAccess.getInstanceRefPhraseAccess().getTheKeyword_1_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getInstanceRefPhraseRule());
						}
					}
					otherlv_2=RULE_ID
					{
						newLeafNode(otherlv_2, grammarAccess.getInstanceRefPhraseAccess().getClassExistenceAnyPhraseCrossReference_1_1_0());
					}
				)
			)
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getInstanceRefPhraseAccess().getFInstanceDirectRefPhraseParserRuleCall_1_2_0_0());
						}
						lv_f_3_1=ruleInstanceDirectRefPhrase
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getInstanceRefPhraseRule());
							}
							set(
								$current,
								"f",
								lv_f_3_1,
								"org.xtext.example.mydsl.MyDsl.InstanceDirectRefPhrase");
							afterParserOrEnumRuleCall();
						}
						    |
						{
							newCompositeNode(grammarAccess.getInstanceRefPhraseAccess().getFInstanceIndirectRefPhraseParserRuleCall_1_2_0_1());
						}
						lv_f_3_2=ruleInstanceIndirectRefPhrase
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getInstanceRefPhraseRule());
							}
							set(
								$current,
								"f",
								lv_f_3_2,
								"org.xtext.example.mydsl.MyDsl.InstanceIndirectRefPhrase");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)?
		)
	)
;

// Entry rule entryRuleInstanceDirectRefPhrase
entryRuleInstanceDirectRefPhrase returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInstanceDirectRefPhraseRule()); }
	iv_ruleInstanceDirectRefPhrase=ruleInstanceDirectRefPhrase
	{ $current=$iv_ruleInstanceDirectRefPhrase.current; }
	EOF;

// Rule InstanceDirectRefPhrase
ruleInstanceDirectRefPhrase returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getInstanceDirectRefPhraseAccess().getValueInstanceBuiltinValuePhraseParserRuleCall_0());
			}
			lv_value_0_0=ruleInstanceBuiltinValuePhrase
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getInstanceDirectRefPhraseRule());
				}
				set(
					$current,
					"value",
					lv_value_0_0,
					"org.xtext.example.mydsl.MyDsl.InstanceBuiltinValuePhrase");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleInstanceIndirectRefPhrase
entryRuleInstanceIndirectRefPhrase returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInstanceIndirectRefPhraseRule()); }
	iv_ruleInstanceIndirectRefPhrase=ruleInstanceIndirectRefPhrase
	{ $current=$iv_ruleInstanceIndirectRefPhrase.current; }
	EOF;

// Rule InstanceIndirectRefPhrase
ruleInstanceIndirectRefPhrase returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='in'
		{
			newLeafNode(otherlv_0, grammarAccess.getInstanceIndirectRefPhraseAccess().getInKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getInstanceIndirectRefPhraseRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getInstanceIndirectRefPhraseAccess().getParentOperationDefinitionBodyFunctionCallInRefsObjectsPhraseCrossReference_1_0());
				}
			)
		)
	)
;

// Entry rule entryRuleInstanceBuiltinValuePhrase
entryRuleInstanceBuiltinValuePhrase returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInstanceBuiltinValuePhraseRule()); }
	iv_ruleInstanceBuiltinValuePhrase=ruleInstanceBuiltinValuePhrase
	{ $current=$iv_ruleInstanceBuiltinValuePhrase.current; }
	EOF;

// Rule InstanceBuiltinValuePhrase
ruleInstanceBuiltinValuePhrase returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getInstanceBuiltinValuePhraseAccess().getInstanceBuiltinValueIntegerPhraseParserRuleCall_0());
		}
		this_InstanceBuiltinValueIntegerPhrase_0=ruleInstanceBuiltinValueIntegerPhrase
		{
			$current = $this_InstanceBuiltinValueIntegerPhrase_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getInstanceBuiltinValuePhraseAccess().getInstanceBuiltinValueStringPhraseParserRuleCall_1());
		}
		this_InstanceBuiltinValueStringPhrase_1=ruleInstanceBuiltinValueStringPhrase
		{
			$current = $this_InstanceBuiltinValueStringPhrase_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleInstanceBuiltinValueIntegerPhrase
entryRuleInstanceBuiltinValueIntegerPhrase returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInstanceBuiltinValueIntegerPhraseRule()); }
	iv_ruleInstanceBuiltinValueIntegerPhrase=ruleInstanceBuiltinValueIntegerPhrase
	{ $current=$iv_ruleInstanceBuiltinValueIntegerPhrase.current; }
	EOF;

// Rule InstanceBuiltinValueIntegerPhrase
ruleInstanceBuiltinValueIntegerPhrase returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getInstanceBuiltinValueIntegerPhraseAccess().getInstanceBuiltinValueIntegerPhraseAction_0(),
					$current);
			}
		)
		(
			(
				lv_v_1_0=RULE_INT
				{
					newLeafNode(lv_v_1_0, grammarAccess.getInstanceBuiltinValueIntegerPhraseAccess().getVINTTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getInstanceBuiltinValueIntegerPhraseRule());
					}
					setWithLastConsumed(
						$current,
						"v",
						lv_v_1_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
	)
;

// Entry rule entryRuleInstanceBuiltinValueStringPhrase
entryRuleInstanceBuiltinValueStringPhrase returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInstanceBuiltinValueStringPhraseRule()); }
	iv_ruleInstanceBuiltinValueStringPhrase=ruleInstanceBuiltinValueStringPhrase
	{ $current=$iv_ruleInstanceBuiltinValueStringPhrase.current; }
	EOF;

// Rule InstanceBuiltinValueStringPhrase
ruleInstanceBuiltinValueStringPhrase returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getInstanceBuiltinValueStringPhraseAccess().getInstanceBuiltinValueStringPhraseAction_0(),
					$current);
			}
		)
		(
			(
				lv_v_1_0=RULE_STRING
				{
					newLeafNode(lv_v_1_0, grammarAccess.getInstanceBuiltinValueStringPhraseAccess().getVSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getInstanceBuiltinValueStringPhraseRule());
					}
					setWithLastConsumed(
						$current,
						"v",
						lv_v_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;

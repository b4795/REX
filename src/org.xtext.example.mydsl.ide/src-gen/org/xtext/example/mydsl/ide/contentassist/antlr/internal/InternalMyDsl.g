/*
 * generated by Xtext 2.25.0
 */
grammar InternalMyDsl;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.xtext.example.mydsl.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.example.mydsl.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.example.mydsl.services.MyDslGrammarAccess;

}
@parser::members {
	private MyDslGrammarAccess grammarAccess;

	public void setGrammarAccess(MyDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleModel
entryRuleModel
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelAccess().getStmtAssignment()); }
		(rule__Model__StmtAssignment)*
		{ after(grammarAccess.getModelAccess().getStmtAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStmt
entryRuleStmt
:
{ before(grammarAccess.getStmtRule()); }
	 ruleStmt
{ after(grammarAccess.getStmtRule()); } 
	 EOF 
;

// Rule Stmt
ruleStmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStmtAccess().getGroup()); }
		(rule__Stmt__Group__0)
		{ after(grammarAccess.getStmtAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExistenceStmt
entryRuleExistenceStmt
:
{ before(grammarAccess.getExistenceStmtRule()); }
	 ruleExistenceStmt
{ after(grammarAccess.getExistenceStmtRule()); } 
	 EOF 
;

// Rule ExistenceStmt
ruleExistenceStmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExistenceStmtAccess().getAlternatives()); }
		(rule__ExistenceStmt__Alternatives)
		{ after(grammarAccess.getExistenceStmtAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExistenceDefiniteStmt
entryRuleExistenceDefiniteStmt
:
{ before(grammarAccess.getExistenceDefiniteStmtRule()); }
	 ruleExistenceDefiniteStmt
{ after(grammarAccess.getExistenceDefiniteStmtRule()); } 
	 EOF 
;

// Rule ExistenceDefiniteStmt
ruleExistenceDefiniteStmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExistenceDefiniteStmtAccess().getGroup()); }
		(rule__ExistenceDefiniteStmt__Group__0)
		{ after(grammarAccess.getExistenceDefiniteStmtAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExistenceDefinitePhrase
entryRuleExistenceDefinitePhrase
:
{ before(grammarAccess.getExistenceDefinitePhraseRule()); }
	 ruleExistenceDefinitePhrase
{ after(grammarAccess.getExistenceDefinitePhraseRule()); } 
	 EOF 
;

// Rule ExistenceDefinitePhrase
ruleExistenceDefinitePhrase 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExistenceDefinitePhraseAccess().getNameAssignment()); }
		(rule__ExistenceDefinitePhrase__NameAssignment)
		{ after(grammarAccess.getExistenceDefinitePhraseAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExistenceDefiniteRefPhrase
entryRuleExistenceDefiniteRefPhrase
:
{ before(grammarAccess.getExistenceDefiniteRefPhraseRule()); }
	 ruleExistenceDefiniteRefPhrase
{ after(grammarAccess.getExistenceDefiniteRefPhraseRule()); } 
	 EOF 
;

// Rule ExistenceDefiniteRefPhrase
ruleExistenceDefiniteRefPhrase 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExistenceDefiniteRefPhraseAccess().getGroup()); }
		(rule__ExistenceDefiniteRefPhrase__Group__0)
		{ after(grammarAccess.getExistenceDefiniteRefPhraseAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExistenceDefiniteRefListPhrase
entryRuleExistenceDefiniteRefListPhrase
:
{ before(grammarAccess.getExistenceDefiniteRefListPhraseRule()); }
	 ruleExistenceDefiniteRefListPhrase
{ after(grammarAccess.getExistenceDefiniteRefListPhraseRule()); } 
	 EOF 
;

// Rule ExistenceDefiniteRefListPhrase
ruleExistenceDefiniteRefListPhrase 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExistenceDefiniteRefListPhraseAccess().getGroup()); }
		(rule__ExistenceDefiniteRefListPhrase__Group__0)
		{ after(grammarAccess.getExistenceDefiniteRefListPhraseAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExistenceIndefiniteStmt
entryRuleExistenceIndefiniteStmt
:
{ before(grammarAccess.getExistenceIndefiniteStmtRule()); }
	 ruleExistenceIndefiniteStmt
{ after(grammarAccess.getExistenceIndefiniteStmtRule()); } 
	 EOF 
;

// Rule ExistenceIndefiniteStmt
ruleExistenceIndefiniteStmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExistenceIndefiniteStmtAccess().getGroup()); }
		(rule__ExistenceIndefiniteStmt__Group__0)
		{ after(grammarAccess.getExistenceIndefiniteStmtAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExistenceSingularIndefinitePhrase
entryRuleExistenceSingularIndefinitePhrase
:
{ before(grammarAccess.getExistenceSingularIndefinitePhraseRule()); }
	 ruleExistenceSingularIndefinitePhrase
{ after(grammarAccess.getExistenceSingularIndefinitePhraseRule()); } 
	 EOF 
;

// Rule ExistenceSingularIndefinitePhrase
ruleExistenceSingularIndefinitePhrase 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExistenceSingularIndefinitePhraseAccess().getNameAssignment()); }
		(rule__ExistenceSingularIndefinitePhrase__NameAssignment)
		{ after(grammarAccess.getExistenceSingularIndefinitePhraseAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExistencePluralIndefinitePhrase
entryRuleExistencePluralIndefinitePhrase
:
{ before(grammarAccess.getExistencePluralIndefinitePhraseRule()); }
	 ruleExistencePluralIndefinitePhrase
{ after(grammarAccess.getExistencePluralIndefinitePhraseRule()); } 
	 EOF 
;

// Rule ExistencePluralIndefinitePhrase
ruleExistencePluralIndefinitePhrase 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExistencePluralIndefinitePhraseAccess().getNameAssignment()); }
		(rule__ExistencePluralIndefinitePhrase__NameAssignment)
		{ after(grammarAccess.getExistencePluralIndefinitePhraseAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExistenceSingularIndefiniteRefPhrase
entryRuleExistenceSingularIndefiniteRefPhrase
:
{ before(grammarAccess.getExistenceSingularIndefiniteRefPhraseRule()); }
	 ruleExistenceSingularIndefiniteRefPhrase
{ after(grammarAccess.getExistenceSingularIndefiniteRefPhraseRule()); } 
	 EOF 
;

// Rule ExistenceSingularIndefiniteRefPhrase
ruleExistenceSingularIndefiniteRefPhrase 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExistenceSingularIndefiniteRefPhraseAccess().getGroup()); }
		(rule__ExistenceSingularIndefiniteRefPhrase__Group__0)
		{ after(grammarAccess.getExistenceSingularIndefiniteRefPhraseAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExistencePluralIndefiniteRefPhrase
entryRuleExistencePluralIndefiniteRefPhrase
:
{ before(grammarAccess.getExistencePluralIndefiniteRefPhraseRule()); }
	 ruleExistencePluralIndefiniteRefPhrase
{ after(grammarAccess.getExistencePluralIndefiniteRefPhraseRule()); } 
	 EOF 
;

// Rule ExistencePluralIndefiniteRefPhrase
ruleExistencePluralIndefiniteRefPhrase 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExistencePluralIndefiniteRefPhraseAccess().getGroup()); }
		(rule__ExistencePluralIndefiniteRefPhrase__Group__0)
		{ after(grammarAccess.getExistencePluralIndefiniteRefPhraseAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExistenceSingularIndefiniteRefListPhrase
entryRuleExistenceSingularIndefiniteRefListPhrase
:
{ before(grammarAccess.getExistenceSingularIndefiniteRefListPhraseRule()); }
	 ruleExistenceSingularIndefiniteRefListPhrase
{ after(grammarAccess.getExistenceSingularIndefiniteRefListPhraseRule()); } 
	 EOF 
;

// Rule ExistenceSingularIndefiniteRefListPhrase
ruleExistenceSingularIndefiniteRefListPhrase 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExistenceSingularIndefiniteRefListPhraseAccess().getGroup()); }
		(rule__ExistenceSingularIndefiniteRefListPhrase__Group__0)
		{ after(grammarAccess.getExistenceSingularIndefiniteRefListPhraseAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExistencePluralIndefiniteRefListPhrase
entryRuleExistencePluralIndefiniteRefListPhrase
:
{ before(grammarAccess.getExistencePluralIndefiniteRefListPhraseRule()); }
	 ruleExistencePluralIndefiniteRefListPhrase
{ after(grammarAccess.getExistencePluralIndefiniteRefListPhraseRule()); } 
	 EOF 
;

// Rule ExistencePluralIndefiniteRefListPhrase
ruleExistencePluralIndefiniteRefListPhrase 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExistencePluralIndefiniteRefListPhraseAccess().getGroup()); }
		(rule__ExistencePluralIndefiniteRefListPhrase__Group__0)
		{ after(grammarAccess.getExistencePluralIndefiniteRefListPhraseAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExistenceSingularRefListPhrase
entryRuleExistenceSingularRefListPhrase
:
{ before(grammarAccess.getExistenceSingularRefListPhraseRule()); }
	 ruleExistenceSingularRefListPhrase
{ after(grammarAccess.getExistenceSingularRefListPhraseRule()); } 
	 EOF 
;

// Rule ExistenceSingularRefListPhrase
ruleExistenceSingularRefListPhrase 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExistenceSingularRefListPhraseAccess().getAlternatives()); }
		(rule__ExistenceSingularRefListPhrase__Alternatives)
		{ after(grammarAccess.getExistenceSingularRefListPhraseAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExistenceAnyRefListPhrase
entryRuleExistenceAnyRefListPhrase
:
{ before(grammarAccess.getExistenceAnyRefListPhraseRule()); }
	 ruleExistenceAnyRefListPhrase
{ after(grammarAccess.getExistenceAnyRefListPhraseRule()); } 
	 EOF 
;

// Rule ExistenceAnyRefListPhrase
ruleExistenceAnyRefListPhrase 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExistenceAnyRefListPhraseAccess().getAlternatives()); }
		(rule__ExistenceAnyRefListPhrase__Alternatives)
		{ after(grammarAccess.getExistenceAnyRefListPhraseAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExistenceIndefiniteRefPhrase
entryRuleExistenceIndefiniteRefPhrase
:
{ before(grammarAccess.getExistenceIndefiniteRefPhraseRule()); }
	 ruleExistenceIndefiniteRefPhrase
{ after(grammarAccess.getExistenceIndefiniteRefPhraseRule()); } 
	 EOF 
;

// Rule ExistenceIndefiniteRefPhrase
ruleExistenceIndefiniteRefPhrase 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExistenceIndefiniteRefPhraseAccess().getAlternatives()); }
		(rule__ExistenceIndefiniteRefPhrase__Alternatives)
		{ after(grammarAccess.getExistenceIndefiniteRefPhraseAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCompositionStmt
entryRuleCompositionStmt
:
{ before(grammarAccess.getCompositionStmtRule()); }
	 ruleCompositionStmt
{ after(grammarAccess.getCompositionStmtRule()); } 
	 EOF 
;

// Rule CompositionStmt
ruleCompositionStmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCompositionStmtAccess().getGroup()); }
		(rule__CompositionStmt__Group__0)
		{ after(grammarAccess.getCompositionStmtAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInheritanceStmt
entryRuleInheritanceStmt
:
{ before(grammarAccess.getInheritanceStmtRule()); }
	 ruleInheritanceStmt
{ after(grammarAccess.getInheritanceStmtRule()); } 
	 EOF 
;

// Rule InheritanceStmt
ruleInheritanceStmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInheritanceStmtAccess().getGroup()); }
		(rule__InheritanceStmt__Group__0)
		{ after(grammarAccess.getInheritanceStmtAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOperationStmt
entryRuleOperationStmt
:
{ before(grammarAccess.getOperationStmtRule()); }
	 ruleOperationStmt
{ after(grammarAccess.getOperationStmtRule()); } 
	 EOF 
;

// Rule OperationStmt
ruleOperationStmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOperationStmtAccess().getAlternatives()); }
		(rule__OperationStmt__Alternatives)
		{ after(grammarAccess.getOperationStmtAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOperationDeclarationStmt
entryRuleOperationDeclarationStmt
:
{ before(grammarAccess.getOperationDeclarationStmtRule()); }
	 ruleOperationDeclarationStmt
{ after(grammarAccess.getOperationDeclarationStmtRule()); } 
	 EOF 
;

// Rule OperationDeclarationStmt
ruleOperationDeclarationStmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOperationDeclarationStmtAccess().getGroup()); }
		(rule__OperationDeclarationStmt__Group__0)
		{ after(grammarAccess.getOperationDeclarationStmtAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOperationDeclarionHeaderStmt
entryRuleOperationDeclarionHeaderStmt
:
{ before(grammarAccess.getOperationDeclarionHeaderStmtRule()); }
	 ruleOperationDeclarionHeaderStmt
{ after(grammarAccess.getOperationDeclarionHeaderStmtRule()); } 
	 EOF 
;

// Rule OperationDeclarionHeaderStmt
ruleOperationDeclarionHeaderStmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		(
			{ before(grammarAccess.getOperationDeclarionHeaderStmtAccess().getParametersAssignment()); }
			(rule__OperationDeclarionHeaderStmt__ParametersAssignment)
			{ after(grammarAccess.getOperationDeclarionHeaderStmtAccess().getParametersAssignment()); }
		)
		(
			{ before(grammarAccess.getOperationDeclarionHeaderStmtAccess().getParametersAssignment()); }
			(rule__OperationDeclarionHeaderStmt__ParametersAssignment)*
			{ after(grammarAccess.getOperationDeclarionHeaderStmtAccess().getParametersAssignment()); }
		)
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOperationParameterPhrase
entryRuleOperationParameterPhrase
:
{ before(grammarAccess.getOperationParameterPhraseRule()); }
	 ruleOperationParameterPhrase
{ after(grammarAccess.getOperationParameterPhraseRule()); } 
	 EOF 
;

// Rule OperationParameterPhrase
ruleOperationParameterPhrase 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOperationParameterPhraseAccess().getAlternatives()); }
		(rule__OperationParameterPhrase__Alternatives)
		{ after(grammarAccess.getOperationParameterPhraseAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOperationDefinitionStmt
entryRuleOperationDefinitionStmt
:
{ before(grammarAccess.getOperationDefinitionStmtRule()); }
	 ruleOperationDefinitionStmt
{ after(grammarAccess.getOperationDefinitionStmtRule()); } 
	 EOF 
;

// Rule OperationDefinitionStmt
ruleOperationDefinitionStmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOperationDefinitionStmtAccess().getGroup()); }
		(rule__OperationDefinitionStmt__Group__0)
		{ after(grammarAccess.getOperationDefinitionStmtAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOperationDefinitionBodyStmts
entryRuleOperationDefinitionBodyStmts
:
{ before(grammarAccess.getOperationDefinitionBodyStmtsRule()); }
	 ruleOperationDefinitionBodyStmts
{ after(grammarAccess.getOperationDefinitionBodyStmtsRule()); } 
	 EOF 
;

// Rule OperationDefinitionBodyStmts
ruleOperationDefinitionBodyStmts 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOperationDefinitionBodyStmtsAccess().getGroup()); }
		(rule__OperationDefinitionBodyStmts__Group__0)
		{ after(grammarAccess.getOperationDefinitionBodyStmtsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOperationDefinitionBodyStmt
entryRuleOperationDefinitionBodyStmt
:
{ before(grammarAccess.getOperationDefinitionBodyStmtRule()); }
	 ruleOperationDefinitionBodyStmt
{ after(grammarAccess.getOperationDefinitionBodyStmtRule()); } 
	 EOF 
;

// Rule OperationDefinitionBodyStmt
ruleOperationDefinitionBodyStmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOperationDefinitionBodyStmtAccess().getAlternatives()); }
		(rule__OperationDefinitionBodyStmt__Alternatives)
		{ after(grammarAccess.getOperationDefinitionBodyStmtAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOperationDefinitionBodyUnconditionalStmt
entryRuleOperationDefinitionBodyUnconditionalStmt
:
{ before(grammarAccess.getOperationDefinitionBodyUnconditionalStmtRule()); }
	 ruleOperationDefinitionBodyUnconditionalStmt
{ after(grammarAccess.getOperationDefinitionBodyUnconditionalStmtRule()); } 
	 EOF 
;

// Rule OperationDefinitionBodyUnconditionalStmt
ruleOperationDefinitionBodyUnconditionalStmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOperationDefinitionBodyUnconditionalStmtAccess().getOperationDefinitionBodyUnconditionalPhraseParserRuleCall()); }
		ruleOperationDefinitionBodyUnconditionalPhrase
		{ after(grammarAccess.getOperationDefinitionBodyUnconditionalStmtAccess().getOperationDefinitionBodyUnconditionalPhraseParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOperationDefinitionBodyUnconditionalPhrase
entryRuleOperationDefinitionBodyUnconditionalPhrase
:
{ before(grammarAccess.getOperationDefinitionBodyUnconditionalPhraseRule()); }
	 ruleOperationDefinitionBodyUnconditionalPhrase
{ after(grammarAccess.getOperationDefinitionBodyUnconditionalPhraseRule()); } 
	 EOF 
;

// Rule OperationDefinitionBodyUnconditionalPhrase
ruleOperationDefinitionBodyUnconditionalPhrase 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOperationDefinitionBodyUnconditionalPhraseAccess().getAlternatives()); }
		(rule__OperationDefinitionBodyUnconditionalPhrase__Alternatives)
		{ after(grammarAccess.getOperationDefinitionBodyUnconditionalPhraseAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOperationDefinitionBodyFunctionCallPhrase
entryRuleOperationDefinitionBodyFunctionCallPhrase
:
{ before(grammarAccess.getOperationDefinitionBodyFunctionCallPhraseRule()); }
	 ruleOperationDefinitionBodyFunctionCallPhrase
{ after(grammarAccess.getOperationDefinitionBodyFunctionCallPhraseRule()); } 
	 EOF 
;

// Rule OperationDefinitionBodyFunctionCallPhrase
ruleOperationDefinitionBodyFunctionCallPhrase 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		(
			{ before(grammarAccess.getOperationDefinitionBodyFunctionCallPhraseAccess().getArgumentsAssignment()); }
			(rule__OperationDefinitionBodyFunctionCallPhrase__ArgumentsAssignment)
			{ after(grammarAccess.getOperationDefinitionBodyFunctionCallPhraseAccess().getArgumentsAssignment()); }
		)
		(
			{ before(grammarAccess.getOperationDefinitionBodyFunctionCallPhraseAccess().getArgumentsAssignment()); }
			(rule__OperationDefinitionBodyFunctionCallPhrase__ArgumentsAssignment)*
			{ after(grammarAccess.getOperationDefinitionBodyFunctionCallPhraseAccess().getArgumentsAssignment()); }
		)
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOperationDefinitionBodyFunctionCallArgumentsPhrase
entryRuleOperationDefinitionBodyFunctionCallArgumentsPhrase
:
{ before(grammarAccess.getOperationDefinitionBodyFunctionCallArgumentsPhraseRule()); }
	 ruleOperationDefinitionBodyFunctionCallArgumentsPhrase
{ after(grammarAccess.getOperationDefinitionBodyFunctionCallArgumentsPhraseRule()); } 
	 EOF 
;

// Rule OperationDefinitionBodyFunctionCallArgumentsPhrase
ruleOperationDefinitionBodyFunctionCallArgumentsPhrase 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOperationDefinitionBodyFunctionCallArgumentsPhraseAccess().getAlternatives()); }
		(rule__OperationDefinitionBodyFunctionCallArgumentsPhrase__Alternatives)
		{ after(grammarAccess.getOperationDefinitionBodyFunctionCallArgumentsPhraseAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOperationDefinitionBodyFunctionCallInRefsRefPhrase
entryRuleOperationDefinitionBodyFunctionCallInRefsRefPhrase
:
{ before(grammarAccess.getOperationDefinitionBodyFunctionCallInRefsRefPhraseRule()); }
	 ruleOperationDefinitionBodyFunctionCallInRefsRefPhrase
{ after(grammarAccess.getOperationDefinitionBodyFunctionCallInRefsRefPhraseRule()); } 
	 EOF 
;

// Rule OperationDefinitionBodyFunctionCallInRefsRefPhrase
ruleOperationDefinitionBodyFunctionCallInRefsRefPhrase 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOperationDefinitionBodyFunctionCallInRefsRefPhraseAccess().getRefAssignment()); }
		(rule__OperationDefinitionBodyFunctionCallInRefsRefPhrase__RefAssignment)
		{ after(grammarAccess.getOperationDefinitionBodyFunctionCallInRefsRefPhraseAccess().getRefAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOperationDefinitionBodyFunctionCallInRefsObjectsPhrase
entryRuleOperationDefinitionBodyFunctionCallInRefsObjectsPhrase
:
{ before(grammarAccess.getOperationDefinitionBodyFunctionCallInRefsObjectsPhraseRule()); }
	 ruleOperationDefinitionBodyFunctionCallInRefsObjectsPhrase
{ after(grammarAccess.getOperationDefinitionBodyFunctionCallInRefsObjectsPhraseRule()); } 
	 EOF 
;

// Rule OperationDefinitionBodyFunctionCallInRefsObjectsPhrase
ruleOperationDefinitionBodyFunctionCallInRefsObjectsPhrase 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOperationDefinitionBodyFunctionCallInRefsObjectsPhraseAccess().getAlternatives()); }
		(rule__OperationDefinitionBodyFunctionCallInRefsObjectsPhrase__Alternatives)
		{ after(grammarAccess.getOperationDefinitionBodyFunctionCallInRefsObjectsPhraseAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOperationDefinitionBodyVariableDeclarationPhrase
entryRuleOperationDefinitionBodyVariableDeclarationPhrase
:
{ before(grammarAccess.getOperationDefinitionBodyVariableDeclarationPhraseRule()); }
	 ruleOperationDefinitionBodyVariableDeclarationPhrase
{ after(grammarAccess.getOperationDefinitionBodyVariableDeclarationPhraseRule()); } 
	 EOF 
;

// Rule OperationDefinitionBodyVariableDeclarationPhrase
ruleOperationDefinitionBodyVariableDeclarationPhrase 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOperationDefinitionBodyVariableDeclarationPhraseAccess().getGroup()); }
		(rule__OperationDefinitionBodyVariableDeclarationPhrase__Group__0)
		{ after(grammarAccess.getOperationDefinitionBodyVariableDeclarationPhraseAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOperationDefinitionBodyConditionalStmt
entryRuleOperationDefinitionBodyConditionalStmt
:
{ before(grammarAccess.getOperationDefinitionBodyConditionalStmtRule()); }
	 ruleOperationDefinitionBodyConditionalStmt
{ after(grammarAccess.getOperationDefinitionBodyConditionalStmtRule()); } 
	 EOF 
;

// Rule OperationDefinitionBodyConditionalStmt
ruleOperationDefinitionBodyConditionalStmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOperationDefinitionBodyConditionalStmtAccess().getGroup()); }
		(rule__OperationDefinitionBodyConditionalStmt__Group__0)
		{ after(grammarAccess.getOperationDefinitionBodyConditionalStmtAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOperationParameterVariableDeclarationPhrase
entryRuleOperationParameterVariableDeclarationPhrase
:
{ before(grammarAccess.getOperationParameterVariableDeclarationPhraseRule()); }
	 ruleOperationParameterVariableDeclarationPhrase
{ after(grammarAccess.getOperationParameterVariableDeclarationPhraseRule()); } 
	 EOF 
;

// Rule OperationParameterVariableDeclarationPhrase
ruleOperationParameterVariableDeclarationPhrase 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOperationParameterVariableDeclarationPhraseAccess().getGroup()); }
		(rule__OperationParameterVariableDeclarationPhrase__Group__0)
		{ after(grammarAccess.getOperationParameterVariableDeclarationPhraseAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOperationParameterConnectionPhrase
entryRuleOperationParameterConnectionPhrase
:
{ before(grammarAccess.getOperationParameterConnectionPhraseRule()); }
	 ruleOperationParameterConnectionPhrase
{ after(grammarAccess.getOperationParameterConnectionPhraseRule()); } 
	 EOF 
;

// Rule OperationParameterConnectionPhrase
ruleOperationParameterConnectionPhrase 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOperationParameterConnectionPhraseAccess().getNameAssignment()); }
		(rule__OperationParameterConnectionPhrase__NameAssignment)
		{ after(grammarAccess.getOperationParameterConnectionPhraseAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOperationParameterConnectionBuiltinRefPhrase
entryRuleOperationParameterConnectionBuiltinRefPhrase
:
{ before(grammarAccess.getOperationParameterConnectionBuiltinRefPhraseRule()); }
	 ruleOperationParameterConnectionBuiltinRefPhrase
{ after(grammarAccess.getOperationParameterConnectionBuiltinRefPhraseRule()); } 
	 EOF 
;

// Rule OperationParameterConnectionBuiltinRefPhrase
ruleOperationParameterConnectionBuiltinRefPhrase 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOperationParameterConnectionBuiltinRefPhraseAccess().getNameAssignment()); }
		(rule__OperationParameterConnectionBuiltinRefPhrase__NameAssignment)
		{ after(grammarAccess.getOperationParameterConnectionBuiltinRefPhraseAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInstanceRefPhrase
entryRuleInstanceRefPhrase
:
{ before(grammarAccess.getInstanceRefPhraseRule()); }
	 ruleInstanceRefPhrase
{ after(grammarAccess.getInstanceRefPhraseRule()); } 
	 EOF 
;

// Rule InstanceRefPhrase
ruleInstanceRefPhrase 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInstanceRefPhraseAccess().getAlternatives()); }
		(rule__InstanceRefPhrase__Alternatives)
		{ after(grammarAccess.getInstanceRefPhraseAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInstanceDirectRefPhrase
entryRuleInstanceDirectRefPhrase
:
{ before(grammarAccess.getInstanceDirectRefPhraseRule()); }
	 ruleInstanceDirectRefPhrase
{ after(grammarAccess.getInstanceDirectRefPhraseRule()); } 
	 EOF 
;

// Rule InstanceDirectRefPhrase
ruleInstanceDirectRefPhrase 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInstanceDirectRefPhraseAccess().getValueAssignment()); }
		(rule__InstanceDirectRefPhrase__ValueAssignment)
		{ after(grammarAccess.getInstanceDirectRefPhraseAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInstanceIndirectRefPhrase
entryRuleInstanceIndirectRefPhrase
:
{ before(grammarAccess.getInstanceIndirectRefPhraseRule()); }
	 ruleInstanceIndirectRefPhrase
{ after(grammarAccess.getInstanceIndirectRefPhraseRule()); } 
	 EOF 
;

// Rule InstanceIndirectRefPhrase
ruleInstanceIndirectRefPhrase 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInstanceIndirectRefPhraseAccess().getGroup()); }
		(rule__InstanceIndirectRefPhrase__Group__0)
		{ after(grammarAccess.getInstanceIndirectRefPhraseAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInstanceBuiltinValuePhrase
entryRuleInstanceBuiltinValuePhrase
:
{ before(grammarAccess.getInstanceBuiltinValuePhraseRule()); }
	 ruleInstanceBuiltinValuePhrase
{ after(grammarAccess.getInstanceBuiltinValuePhraseRule()); } 
	 EOF 
;

// Rule InstanceBuiltinValuePhrase
ruleInstanceBuiltinValuePhrase 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInstanceBuiltinValuePhraseAccess().getAlternatives()); }
		(rule__InstanceBuiltinValuePhrase__Alternatives)
		{ after(grammarAccess.getInstanceBuiltinValuePhraseAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInstanceBuiltinValueIntegerPhrase
entryRuleInstanceBuiltinValueIntegerPhrase
:
{ before(grammarAccess.getInstanceBuiltinValueIntegerPhraseRule()); }
	 ruleInstanceBuiltinValueIntegerPhrase
{ after(grammarAccess.getInstanceBuiltinValueIntegerPhraseRule()); } 
	 EOF 
;

// Rule InstanceBuiltinValueIntegerPhrase
ruleInstanceBuiltinValueIntegerPhrase 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInstanceBuiltinValueIntegerPhraseAccess().getGroup()); }
		(rule__InstanceBuiltinValueIntegerPhrase__Group__0)
		{ after(grammarAccess.getInstanceBuiltinValueIntegerPhraseAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInstanceBuiltinValueStringPhrase
entryRuleInstanceBuiltinValueStringPhrase
:
{ before(grammarAccess.getInstanceBuiltinValueStringPhraseRule()); }
	 ruleInstanceBuiltinValueStringPhrase
{ after(grammarAccess.getInstanceBuiltinValueStringPhraseRule()); } 
	 EOF 
;

// Rule InstanceBuiltinValueStringPhrase
ruleInstanceBuiltinValueStringPhrase 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInstanceBuiltinValueStringPhraseAccess().getGroup()); }
		(rule__InstanceBuiltinValueStringPhrase__Group__0)
		{ after(grammarAccess.getInstanceBuiltinValueStringPhraseAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Stmt__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStmtAccess().getExistenceStmtParserRuleCall_0_0()); }
		ruleExistenceStmt
		{ after(grammarAccess.getStmtAccess().getExistenceStmtParserRuleCall_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getStmtAccess().getCompositionStmtParserRuleCall_0_1()); }
		ruleCompositionStmt
		{ after(grammarAccess.getStmtAccess().getCompositionStmtParserRuleCall_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getStmtAccess().getInheritanceStmtParserRuleCall_0_2()); }
		ruleInheritanceStmt
		{ after(grammarAccess.getStmtAccess().getInheritanceStmtParserRuleCall_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getStmtAccess().getOperationStmtParserRuleCall_0_3()); }
		ruleOperationStmt
		{ after(grammarAccess.getStmtAccess().getOperationStmtParserRuleCall_0_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistenceStmt__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExistenceStmtAccess().getExistenceDefiniteStmtParserRuleCall_0()); }
		ruleExistenceDefiniteStmt
		{ after(grammarAccess.getExistenceStmtAccess().getExistenceDefiniteStmtParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getExistenceStmtAccess().getExistenceIndefiniteStmtParserRuleCall_1()); }
		ruleExistenceIndefiniteStmt
		{ after(grammarAccess.getExistenceStmtAccess().getExistenceIndefiniteStmtParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistenceSingularIndefiniteRefPhrase__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExistenceSingularIndefiniteRefPhraseAccess().getOneKeyword_0_0()); }
		'one'
		{ after(grammarAccess.getExistenceSingularIndefiniteRefPhraseAccess().getOneKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getExistenceSingularIndefiniteRefPhraseAccess().getAKeyword_0_1()); }
		'a'
		{ after(grammarAccess.getExistenceSingularIndefiniteRefPhraseAccess().getAKeyword_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getExistenceSingularIndefiniteRefPhraseAccess().getAnKeyword_0_2()); }
		'an'
		{ after(grammarAccess.getExistenceSingularIndefiniteRefPhraseAccess().getAnKeyword_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistencePluralIndefiniteRefPhrase__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExistencePluralIndefiniteRefPhraseAccess().getINTTerminalRuleCall_0_0()); }
		RULE_INT
		{ after(grammarAccess.getExistencePluralIndefiniteRefPhraseAccess().getINTTerminalRuleCall_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getExistencePluralIndefiniteRefPhraseAccess().getOne_or_moreKeyword_0_1()); }
		'one_or_more'
		{ after(grammarAccess.getExistencePluralIndefiniteRefPhraseAccess().getOne_or_moreKeyword_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getExistencePluralIndefiniteRefPhraseAccess().getZero_or_moreKeyword_0_2()); }
		'zero_or_more'
		{ after(grammarAccess.getExistencePluralIndefiniteRefPhraseAccess().getZero_or_moreKeyword_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistenceSingularRefListPhrase__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExistenceSingularRefListPhraseAccess().getExistenceDefiniteRefListPhraseParserRuleCall_0()); }
		ruleExistenceDefiniteRefListPhrase
		{ after(grammarAccess.getExistenceSingularRefListPhraseAccess().getExistenceDefiniteRefListPhraseParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getExistenceSingularRefListPhraseAccess().getExistenceSingularIndefiniteRefListPhraseParserRuleCall_1()); }
		ruleExistenceSingularIndefiniteRefListPhrase
		{ after(grammarAccess.getExistenceSingularRefListPhraseAccess().getExistenceSingularIndefiniteRefListPhraseParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistenceAnyRefListPhrase__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExistenceAnyRefListPhraseAccess().getExistenceDefiniteRefListPhraseParserRuleCall_0()); }
		ruleExistenceDefiniteRefListPhrase
		{ after(grammarAccess.getExistenceAnyRefListPhraseAccess().getExistenceDefiniteRefListPhraseParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getExistenceAnyRefListPhraseAccess().getExistenceSingularIndefiniteRefListPhraseParserRuleCall_1()); }
		ruleExistenceSingularIndefiniteRefListPhrase
		{ after(grammarAccess.getExistenceAnyRefListPhraseAccess().getExistenceSingularIndefiniteRefListPhraseParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getExistenceAnyRefListPhraseAccess().getExistencePluralIndefiniteRefListPhraseParserRuleCall_2()); }
		ruleExistencePluralIndefiniteRefListPhrase
		{ after(grammarAccess.getExistenceAnyRefListPhraseAccess().getExistencePluralIndefiniteRefListPhraseParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistenceIndefiniteRefPhrase__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExistenceIndefiniteRefPhraseAccess().getExistenceSingularIndefiniteRefPhraseParserRuleCall_0()); }
		ruleExistenceSingularIndefiniteRefPhrase
		{ after(grammarAccess.getExistenceIndefiniteRefPhraseAccess().getExistenceSingularIndefiniteRefPhraseParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getExistenceIndefiniteRefPhraseAccess().getExistencePluralIndefiniteRefPhraseParserRuleCall_1()); }
		ruleExistencePluralIndefiniteRefPhrase
		{ after(grammarAccess.getExistenceIndefiniteRefPhraseAccess().getExistencePluralIndefiniteRefPhraseParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositionStmt__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompositionStmtAccess().getHasKeyword_1_0()); }
		'has'
		{ after(grammarAccess.getCompositionStmtAccess().getHasKeyword_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getCompositionStmtAccess().getIs_composed_byKeyword_1_1()); }
		'is_composed_by'
		{ after(grammarAccess.getCompositionStmtAccess().getIs_composed_byKeyword_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getCompositionStmtAccess().getContainsKeyword_1_2()); }
		'contains'
		{ after(grammarAccess.getCompositionStmtAccess().getContainsKeyword_1_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InheritanceStmt__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInheritanceStmtAccess().getIsKeyword_1_0()); }
		'is'
		{ after(grammarAccess.getInheritanceStmtAccess().getIsKeyword_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getInheritanceStmtAccess().getAre_eachKeyword_1_1()); }
		'are_each'
		{ after(grammarAccess.getInheritanceStmtAccess().getAre_eachKeyword_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationStmt__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperationStmtAccess().getOperationDeclarationStmtParserRuleCall_0()); }
		ruleOperationDeclarationStmt
		{ after(grammarAccess.getOperationStmtAccess().getOperationDeclarationStmtParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getOperationStmtAccess().getOperationDefinitionStmtParserRuleCall_1()); }
		ruleOperationDefinitionStmt
		{ after(grammarAccess.getOperationStmtAccess().getOperationDefinitionStmtParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDeclarationStmt__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperationDeclarationStmtAccess().getIt_is_possible_thatKeyword_0_0()); }
		'it_is_possible_that'
		{ after(grammarAccess.getOperationDeclarationStmtAccess().getIt_is_possible_thatKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getOperationDeclarationStmtAccess().getIt_is_possible_toKeyword_0_1()); }
		'it_is_possible_to'
		{ after(grammarAccess.getOperationDeclarationStmtAccess().getIt_is_possible_toKeyword_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getOperationDeclarationStmtAccess().getIt_is_possibleKeyword_0_2()); }
		'it_is_possible'
		{ after(grammarAccess.getOperationDeclarationStmtAccess().getIt_is_possibleKeyword_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationParameterPhrase__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperationParameterPhraseAccess().getOperationParameterVariableDeclarationPhraseParserRuleCall_0()); }
		ruleOperationParameterVariableDeclarationPhrase
		{ after(grammarAccess.getOperationParameterPhraseAccess().getOperationParameterVariableDeclarationPhraseParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getOperationParameterPhraseAccess().getOperationParameterConnectionPhraseParserRuleCall_1()); }
		ruleOperationParameterConnectionPhrase
		{ after(grammarAccess.getOperationParameterPhraseAccess().getOperationParameterConnectionPhraseParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDefinitionBodyStmt__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperationDefinitionBodyStmtAccess().getOperationDefinitionBodyUnconditionalStmtParserRuleCall_0()); }
		ruleOperationDefinitionBodyUnconditionalStmt
		{ after(grammarAccess.getOperationDefinitionBodyStmtAccess().getOperationDefinitionBodyUnconditionalStmtParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getOperationDefinitionBodyStmtAccess().getOperationDefinitionBodyConditionalStmtParserRuleCall_1()); }
		ruleOperationDefinitionBodyConditionalStmt
		{ after(grammarAccess.getOperationDefinitionBodyStmtAccess().getOperationDefinitionBodyConditionalStmtParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDefinitionBodyUnconditionalPhrase__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperationDefinitionBodyUnconditionalPhraseAccess().getOperationDefinitionBodyFunctionCallPhraseParserRuleCall_0()); }
		ruleOperationDefinitionBodyFunctionCallPhrase
		{ after(grammarAccess.getOperationDefinitionBodyUnconditionalPhraseAccess().getOperationDefinitionBodyFunctionCallPhraseParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getOperationDefinitionBodyUnconditionalPhraseAccess().getOperationDefinitionBodyVariableDeclarationPhraseParserRuleCall_1()); }
		ruleOperationDefinitionBodyVariableDeclarationPhrase
		{ after(grammarAccess.getOperationDefinitionBodyUnconditionalPhraseAccess().getOperationDefinitionBodyVariableDeclarationPhraseParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDefinitionBodyFunctionCallArgumentsPhrase__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperationDefinitionBodyFunctionCallArgumentsPhraseAccess().getOperationDefinitionBodyFunctionCallInRefsRefPhraseParserRuleCall_0()); }
		ruleOperationDefinitionBodyFunctionCallInRefsRefPhrase
		{ after(grammarAccess.getOperationDefinitionBodyFunctionCallArgumentsPhraseAccess().getOperationDefinitionBodyFunctionCallInRefsRefPhraseParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getOperationDefinitionBodyFunctionCallArgumentsPhraseAccess().getInstanceRefPhraseParserRuleCall_1()); }
		ruleInstanceRefPhrase
		{ after(grammarAccess.getOperationDefinitionBodyFunctionCallArgumentsPhraseAccess().getInstanceRefPhraseParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getOperationDefinitionBodyFunctionCallArgumentsPhraseAccess().getOperationParameterConnectionBuiltinRefPhraseParserRuleCall_2()); }
		ruleOperationParameterConnectionBuiltinRefPhrase
		{ after(grammarAccess.getOperationDefinitionBodyFunctionCallArgumentsPhraseAccess().getOperationParameterConnectionBuiltinRefPhraseParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDefinitionBodyFunctionCallInRefsObjectsPhrase__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperationDefinitionBodyFunctionCallInRefsObjectsPhraseAccess().getOperationParameterVariableDeclarationPhraseParserRuleCall_0()); }
		ruleOperationParameterVariableDeclarationPhrase
		{ after(grammarAccess.getOperationDefinitionBodyFunctionCallInRefsObjectsPhraseAccess().getOperationParameterVariableDeclarationPhraseParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getOperationDefinitionBodyFunctionCallInRefsObjectsPhraseAccess().getOperationDefinitionBodyVariableDeclarationPhraseParserRuleCall_1()); }
		ruleOperationDefinitionBodyVariableDeclarationPhrase
		{ after(grammarAccess.getOperationDefinitionBodyFunctionCallInRefsObjectsPhraseAccess().getOperationDefinitionBodyVariableDeclarationPhraseParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationParameterConnectionPhrase__NameAlternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperationParameterConnectionPhraseAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getOperationParameterConnectionPhraseAccess().getNameIDTerminalRuleCall_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getOperationParameterConnectionPhraseAccess().getNameIsKeyword_0_1()); }
		'is'
		{ after(grammarAccess.getOperationParameterConnectionPhraseAccess().getNameIsKeyword_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getOperationParameterConnectionPhraseAccess().getNameAndKeyword_0_2()); }
		'and'
		{ after(grammarAccess.getOperationParameterConnectionPhraseAccess().getNameAndKeyword_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getOperationParameterConnectionPhraseAccess().getNameOrKeyword_0_3()); }
		'or'
		{ after(grammarAccess.getOperationParameterConnectionPhraseAccess().getNameOrKeyword_0_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationParameterConnectionBuiltinRefPhrase__NameAlternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperationParameterConnectionBuiltinRefPhraseAccess().getNameIsKeyword_0_0()); }
		'is'
		{ after(grammarAccess.getOperationParameterConnectionBuiltinRefPhraseAccess().getNameIsKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getOperationParameterConnectionBuiltinRefPhraseAccess().getNameAndKeyword_0_1()); }
		'and'
		{ after(grammarAccess.getOperationParameterConnectionBuiltinRefPhraseAccess().getNameAndKeyword_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getOperationParameterConnectionBuiltinRefPhraseAccess().getNameOrKeyword_0_2()); }
		'or'
		{ after(grammarAccess.getOperationParameterConnectionBuiltinRefPhraseAccess().getNameOrKeyword_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceRefPhrase__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInstanceRefPhraseAccess().getFAssignment_0()); }
		(rule__InstanceRefPhrase__FAssignment_0)
		{ after(grammarAccess.getInstanceRefPhraseAccess().getFAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getInstanceRefPhraseAccess().getGroup_1()); }
		(rule__InstanceRefPhrase__Group_1__0)
		{ after(grammarAccess.getInstanceRefPhraseAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceRefPhrase__FAlternatives_1_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInstanceRefPhraseAccess().getFInstanceDirectRefPhraseParserRuleCall_1_2_0_0()); }
		ruleInstanceDirectRefPhrase
		{ after(grammarAccess.getInstanceRefPhraseAccess().getFInstanceDirectRefPhraseParserRuleCall_1_2_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getInstanceRefPhraseAccess().getFInstanceIndirectRefPhraseParserRuleCall_1_2_0_1()); }
		ruleInstanceIndirectRefPhrase
		{ after(grammarAccess.getInstanceRefPhraseAccess().getFInstanceIndirectRefPhraseParserRuleCall_1_2_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceBuiltinValuePhrase__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInstanceBuiltinValuePhraseAccess().getInstanceBuiltinValueIntegerPhraseParserRuleCall_0()); }
		ruleInstanceBuiltinValueIntegerPhrase
		{ after(grammarAccess.getInstanceBuiltinValuePhraseAccess().getInstanceBuiltinValueIntegerPhraseParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getInstanceBuiltinValuePhraseAccess().getInstanceBuiltinValueStringPhraseParserRuleCall_1()); }
		ruleInstanceBuiltinValueStringPhrase
		{ after(grammarAccess.getInstanceBuiltinValuePhraseAccess().getInstanceBuiltinValueStringPhraseParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Stmt__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Stmt__Group__0__Impl
	rule__Stmt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Stmt__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStmtAccess().getAlternatives_0()); }
	(rule__Stmt__Alternatives_0)
	{ after(grammarAccess.getStmtAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Stmt__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Stmt__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Stmt__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStmtAccess().getFullStopKeyword_1()); }
	'.'
	{ after(grammarAccess.getStmtAccess().getFullStopKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExistenceDefiniteStmt__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExistenceDefiniteStmt__Group__0__Impl
	rule__ExistenceDefiniteStmt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistenceDefiniteStmt__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExistenceDefiniteStmtAccess().getThere_is_oneKeyword_0()); }
	'there_is_one'
	{ after(grammarAccess.getExistenceDefiniteStmtAccess().getThere_is_oneKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistenceDefiniteStmt__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExistenceDefiniteStmt__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistenceDefiniteStmt__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExistenceDefiniteStmtAccess().getDefiniteAssignment_1()); }
	(rule__ExistenceDefiniteStmt__DefiniteAssignment_1)
	{ after(grammarAccess.getExistenceDefiniteStmtAccess().getDefiniteAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExistenceDefiniteRefPhrase__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExistenceDefiniteRefPhrase__Group__0__Impl
	rule__ExistenceDefiniteRefPhrase__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistenceDefiniteRefPhrase__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExistenceDefiniteRefPhraseAccess().getTheKeyword_0()); }
	'the'
	{ after(grammarAccess.getExistenceDefiniteRefPhraseAccess().getTheKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistenceDefiniteRefPhrase__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExistenceDefiniteRefPhrase__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistenceDefiniteRefPhrase__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExistenceDefiniteRefPhraseAccess().getRefAssignment_1()); }
	(rule__ExistenceDefiniteRefPhrase__RefAssignment_1)
	{ after(grammarAccess.getExistenceDefiniteRefPhraseAccess().getRefAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExistenceDefiniteRefListPhrase__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExistenceDefiniteRefListPhrase__Group__0__Impl
	rule__ExistenceDefiniteRefListPhrase__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistenceDefiniteRefListPhrase__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExistenceDefiniteRefListPhraseAccess().getElementsAssignment_0()); }
	(rule__ExistenceDefiniteRefListPhrase__ElementsAssignment_0)
	{ after(grammarAccess.getExistenceDefiniteRefListPhraseAccess().getElementsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistenceDefiniteRefListPhrase__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExistenceDefiniteRefListPhrase__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistenceDefiniteRefListPhrase__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExistenceDefiniteRefListPhraseAccess().getGroup_1()); }
	(rule__ExistenceDefiniteRefListPhrase__Group_1__0)*
	{ after(grammarAccess.getExistenceDefiniteRefListPhraseAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExistenceDefiniteRefListPhrase__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExistenceDefiniteRefListPhrase__Group_1__0__Impl
	rule__ExistenceDefiniteRefListPhrase__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistenceDefiniteRefListPhrase__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExistenceDefiniteRefListPhraseAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getExistenceDefiniteRefListPhraseAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistenceDefiniteRefListPhrase__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExistenceDefiniteRefListPhrase__Group_1__1__Impl
	rule__ExistenceDefiniteRefListPhrase__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistenceDefiniteRefListPhrase__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExistenceDefiniteRefListPhraseAccess().getAndKeyword_1_1()); }
	('and')?
	{ after(grammarAccess.getExistenceDefiniteRefListPhraseAccess().getAndKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistenceDefiniteRefListPhrase__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExistenceDefiniteRefListPhrase__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistenceDefiniteRefListPhrase__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExistenceDefiniteRefListPhraseAccess().getElementsAssignment_1_2()); }
	(rule__ExistenceDefiniteRefListPhrase__ElementsAssignment_1_2)
	{ after(grammarAccess.getExistenceDefiniteRefListPhraseAccess().getElementsAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExistenceIndefiniteStmt__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExistenceIndefiniteStmt__Group__0__Impl
	rule__ExistenceIndefiniteStmt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistenceIndefiniteStmt__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExistenceIndefiniteStmtAccess().getThere_areKeyword_0()); }
	'there_are'
	{ after(grammarAccess.getExistenceIndefiniteStmtAccess().getThere_areKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistenceIndefiniteStmt__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExistenceIndefiniteStmt__Group__1__Impl
	rule__ExistenceIndefiniteStmt__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistenceIndefiniteStmt__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExistenceIndefiniteStmtAccess().getPluralAssignment_1()); }
	(rule__ExistenceIndefiniteStmt__PluralAssignment_1)
	{ after(grammarAccess.getExistenceIndefiniteStmtAccess().getPluralAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistenceIndefiniteStmt__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExistenceIndefiniteStmt__Group__2__Impl
	rule__ExistenceIndefiniteStmt__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistenceIndefiniteStmt__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExistenceIndefiniteStmtAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getExistenceIndefiniteStmtAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistenceIndefiniteStmt__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExistenceIndefiniteStmt__Group__3__Impl
	rule__ExistenceIndefiniteStmt__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistenceIndefiniteStmt__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExistenceIndefiniteStmtAccess().getSingularAssignment_3()); }
	(rule__ExistenceIndefiniteStmt__SingularAssignment_3)
	{ after(grammarAccess.getExistenceIndefiniteStmtAccess().getSingularAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistenceIndefiniteStmt__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExistenceIndefiniteStmt__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistenceIndefiniteStmt__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExistenceIndefiniteStmtAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getExistenceIndefiniteStmtAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExistenceSingularIndefiniteRefPhrase__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExistenceSingularIndefiniteRefPhrase__Group__0__Impl
	rule__ExistenceSingularIndefiniteRefPhrase__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistenceSingularIndefiniteRefPhrase__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExistenceSingularIndefiniteRefPhraseAccess().getAlternatives_0()); }
	(rule__ExistenceSingularIndefiniteRefPhrase__Alternatives_0)
	{ after(grammarAccess.getExistenceSingularIndefiniteRefPhraseAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistenceSingularIndefiniteRefPhrase__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExistenceSingularIndefiniteRefPhrase__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistenceSingularIndefiniteRefPhrase__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExistenceSingularIndefiniteRefPhraseAccess().getRefAssignment_1()); }
	(rule__ExistenceSingularIndefiniteRefPhrase__RefAssignment_1)
	{ after(grammarAccess.getExistenceSingularIndefiniteRefPhraseAccess().getRefAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExistencePluralIndefiniteRefPhrase__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExistencePluralIndefiniteRefPhrase__Group__0__Impl
	rule__ExistencePluralIndefiniteRefPhrase__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistencePluralIndefiniteRefPhrase__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExistencePluralIndefiniteRefPhraseAccess().getAlternatives_0()); }
	(rule__ExistencePluralIndefiniteRefPhrase__Alternatives_0)?
	{ after(grammarAccess.getExistencePluralIndefiniteRefPhraseAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistencePluralIndefiniteRefPhrase__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExistencePluralIndefiniteRefPhrase__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistencePluralIndefiniteRefPhrase__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExistencePluralIndefiniteRefPhraseAccess().getRefAssignment_1()); }
	(rule__ExistencePluralIndefiniteRefPhrase__RefAssignment_1)
	{ after(grammarAccess.getExistencePluralIndefiniteRefPhraseAccess().getRefAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExistenceSingularIndefiniteRefListPhrase__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExistenceSingularIndefiniteRefListPhrase__Group__0__Impl
	rule__ExistenceSingularIndefiniteRefListPhrase__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistenceSingularIndefiniteRefListPhrase__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExistenceSingularIndefiniteRefListPhraseAccess().getElementsAssignment_0()); }
	(rule__ExistenceSingularIndefiniteRefListPhrase__ElementsAssignment_0)
	{ after(grammarAccess.getExistenceSingularIndefiniteRefListPhraseAccess().getElementsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistenceSingularIndefiniteRefListPhrase__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExistenceSingularIndefiniteRefListPhrase__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistenceSingularIndefiniteRefListPhrase__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExistenceSingularIndefiniteRefListPhraseAccess().getGroup_1()); }
	(rule__ExistenceSingularIndefiniteRefListPhrase__Group_1__0)*
	{ after(grammarAccess.getExistenceSingularIndefiniteRefListPhraseAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExistenceSingularIndefiniteRefListPhrase__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExistenceSingularIndefiniteRefListPhrase__Group_1__0__Impl
	rule__ExistenceSingularIndefiniteRefListPhrase__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistenceSingularIndefiniteRefListPhrase__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExistenceSingularIndefiniteRefListPhraseAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getExistenceSingularIndefiniteRefListPhraseAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistenceSingularIndefiniteRefListPhrase__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExistenceSingularIndefiniteRefListPhrase__Group_1__1__Impl
	rule__ExistenceSingularIndefiniteRefListPhrase__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistenceSingularIndefiniteRefListPhrase__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExistenceSingularIndefiniteRefListPhraseAccess().getAndKeyword_1_1()); }
	('and')?
	{ after(grammarAccess.getExistenceSingularIndefiniteRefListPhraseAccess().getAndKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistenceSingularIndefiniteRefListPhrase__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExistenceSingularIndefiniteRefListPhrase__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistenceSingularIndefiniteRefListPhrase__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExistenceSingularIndefiniteRefListPhraseAccess().getElementsAssignment_1_2()); }
	(rule__ExistenceSingularIndefiniteRefListPhrase__ElementsAssignment_1_2)
	{ after(grammarAccess.getExistenceSingularIndefiniteRefListPhraseAccess().getElementsAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExistencePluralIndefiniteRefListPhrase__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExistencePluralIndefiniteRefListPhrase__Group__0__Impl
	rule__ExistencePluralIndefiniteRefListPhrase__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistencePluralIndefiniteRefListPhrase__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExistencePluralIndefiniteRefListPhraseAccess().getElementsAssignment_0()); }
	(rule__ExistencePluralIndefiniteRefListPhrase__ElementsAssignment_0)
	{ after(grammarAccess.getExistencePluralIndefiniteRefListPhraseAccess().getElementsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistencePluralIndefiniteRefListPhrase__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExistencePluralIndefiniteRefListPhrase__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistencePluralIndefiniteRefListPhrase__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExistencePluralIndefiniteRefListPhraseAccess().getGroup_1()); }
	(rule__ExistencePluralIndefiniteRefListPhrase__Group_1__0)*
	{ after(grammarAccess.getExistencePluralIndefiniteRefListPhraseAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExistencePluralIndefiniteRefListPhrase__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExistencePluralIndefiniteRefListPhrase__Group_1__0__Impl
	rule__ExistencePluralIndefiniteRefListPhrase__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistencePluralIndefiniteRefListPhrase__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExistencePluralIndefiniteRefListPhraseAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getExistencePluralIndefiniteRefListPhraseAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistencePluralIndefiniteRefListPhrase__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExistencePluralIndefiniteRefListPhrase__Group_1__1__Impl
	rule__ExistencePluralIndefiniteRefListPhrase__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistencePluralIndefiniteRefListPhrase__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExistencePluralIndefiniteRefListPhraseAccess().getAndKeyword_1_1()); }
	('and')?
	{ after(grammarAccess.getExistencePluralIndefiniteRefListPhraseAccess().getAndKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistencePluralIndefiniteRefListPhrase__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExistencePluralIndefiniteRefListPhrase__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistencePluralIndefiniteRefListPhrase__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExistencePluralIndefiniteRefListPhraseAccess().getElementsAssignment_1_2()); }
	(rule__ExistencePluralIndefiniteRefListPhrase__ElementsAssignment_1_2)
	{ after(grammarAccess.getExistencePluralIndefiniteRefListPhraseAccess().getElementsAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CompositionStmt__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompositionStmt__Group__0__Impl
	rule__CompositionStmt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositionStmt__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositionStmtAccess().getParentAssignment_0()); }
	(rule__CompositionStmt__ParentAssignment_0)
	{ after(grammarAccess.getCompositionStmtAccess().getParentAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositionStmt__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompositionStmt__Group__1__Impl
	rule__CompositionStmt__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositionStmt__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositionStmtAccess().getAlternatives_1()); }
	(rule__CompositionStmt__Alternatives_1)
	{ after(grammarAccess.getCompositionStmtAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositionStmt__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompositionStmt__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositionStmt__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositionStmtAccess().getChildrenAssignment_2()); }
	(rule__CompositionStmt__ChildrenAssignment_2)
	{ after(grammarAccess.getCompositionStmtAccess().getChildrenAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InheritanceStmt__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InheritanceStmt__Group__0__Impl
	rule__InheritanceStmt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InheritanceStmt__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInheritanceStmtAccess().getClassAssignment_0()); }
	(rule__InheritanceStmt__ClassAssignment_0)
	{ after(grammarAccess.getInheritanceStmtAccess().getClassAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InheritanceStmt__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InheritanceStmt__Group__1__Impl
	rule__InheritanceStmt__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InheritanceStmt__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInheritanceStmtAccess().getAlternatives_1()); }
	(rule__InheritanceStmt__Alternatives_1)
	{ after(grammarAccess.getInheritanceStmtAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InheritanceStmt__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InheritanceStmt__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InheritanceStmt__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInheritanceStmtAccess().getSuperclassAssignment_2()); }
	(rule__InheritanceStmt__SuperclassAssignment_2)
	{ after(grammarAccess.getInheritanceStmtAccess().getSuperclassAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OperationDeclarationStmt__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationDeclarationStmt__Group__0__Impl
	rule__OperationDeclarationStmt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDeclarationStmt__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationDeclarationStmtAccess().getAlternatives_0()); }
	(rule__OperationDeclarationStmt__Alternatives_0)
	{ after(grammarAccess.getOperationDeclarationStmtAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDeclarationStmt__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationDeclarationStmt__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDeclarationStmt__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationDeclarationStmtAccess().getOperationDeclarionHeaderStmtParserRuleCall_1()); }
	ruleOperationDeclarionHeaderStmt
	{ after(grammarAccess.getOperationDeclarationStmtAccess().getOperationDeclarionHeaderStmtParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OperationDefinitionStmt__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationDefinitionStmt__Group__0__Impl
	rule__OperationDefinitionStmt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDefinitionStmt__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationDefinitionStmtAccess().getIfKeyword_0()); }
	'if'
	{ after(grammarAccess.getOperationDefinitionStmtAccess().getIfKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDefinitionStmt__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationDefinitionStmt__Group__1__Impl
	rule__OperationDefinitionStmt__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDefinitionStmt__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationDefinitionStmtAccess().getHeaderAssignment_1()); }
	(rule__OperationDefinitionStmt__HeaderAssignment_1)
	{ after(grammarAccess.getOperationDefinitionStmtAccess().getHeaderAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDefinitionStmt__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationDefinitionStmt__Group__2__Impl
	rule__OperationDefinitionStmt__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDefinitionStmt__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationDefinitionStmtAccess().getCommaKeyword_2()); }
	','
	{ after(grammarAccess.getOperationDefinitionStmtAccess().getCommaKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDefinitionStmt__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationDefinitionStmt__Group__3__Impl
	rule__OperationDefinitionStmt__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDefinitionStmt__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationDefinitionStmtAccess().getThenKeyword_3()); }
	'then'
	{ after(grammarAccess.getOperationDefinitionStmtAccess().getThenKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDefinitionStmt__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationDefinitionStmt__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDefinitionStmt__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationDefinitionStmtAccess().getBodyAssignment_4()); }
	(rule__OperationDefinitionStmt__BodyAssignment_4)
	{ after(grammarAccess.getOperationDefinitionStmtAccess().getBodyAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OperationDefinitionBodyStmts__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationDefinitionBodyStmts__Group__0__Impl
	rule__OperationDefinitionBodyStmts__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDefinitionBodyStmts__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationDefinitionBodyStmtsAccess().getStmtsAssignment_0()); }
	(rule__OperationDefinitionBodyStmts__StmtsAssignment_0)
	{ after(grammarAccess.getOperationDefinitionBodyStmtsAccess().getStmtsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDefinitionBodyStmts__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationDefinitionBodyStmts__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDefinitionBodyStmts__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationDefinitionBodyStmtsAccess().getGroup_1()); }
	(rule__OperationDefinitionBodyStmts__Group_1__0)*
	{ after(grammarAccess.getOperationDefinitionBodyStmtsAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OperationDefinitionBodyStmts__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationDefinitionBodyStmts__Group_1__0__Impl
	rule__OperationDefinitionBodyStmts__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDefinitionBodyStmts__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationDefinitionBodyStmtsAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getOperationDefinitionBodyStmtsAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDefinitionBodyStmts__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationDefinitionBodyStmts__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDefinitionBodyStmts__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationDefinitionBodyStmtsAccess().getStmtsAssignment_1_1()); }
	(rule__OperationDefinitionBodyStmts__StmtsAssignment_1_1)
	{ after(grammarAccess.getOperationDefinitionBodyStmtsAccess().getStmtsAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OperationDefinitionBodyVariableDeclarationPhrase__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationDefinitionBodyVariableDeclarationPhrase__Group__0__Impl
	rule__OperationDefinitionBodyVariableDeclarationPhrase__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDefinitionBodyVariableDeclarationPhrase__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationDefinitionBodyVariableDeclarationPhraseAccess().getThere_is_oneKeyword_0()); }
	'there_is_one'
	{ after(grammarAccess.getOperationDefinitionBodyVariableDeclarationPhraseAccess().getThere_is_oneKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDefinitionBodyVariableDeclarationPhrase__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationDefinitionBodyVariableDeclarationPhrase__Group__1__Impl
	rule__OperationDefinitionBodyVariableDeclarationPhrase__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDefinitionBodyVariableDeclarationPhrase__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationDefinitionBodyVariableDeclarationPhraseAccess().getTypeAssignment_1()); }
	(rule__OperationDefinitionBodyVariableDeclarationPhrase__TypeAssignment_1)
	{ after(grammarAccess.getOperationDefinitionBodyVariableDeclarationPhraseAccess().getTypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDefinitionBodyVariableDeclarationPhrase__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationDefinitionBodyVariableDeclarationPhrase__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDefinitionBodyVariableDeclarationPhrase__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationDefinitionBodyVariableDeclarationPhraseAccess().getNameAssignment_2()); }
	(rule__OperationDefinitionBodyVariableDeclarationPhrase__NameAssignment_2)
	{ after(grammarAccess.getOperationDefinitionBodyVariableDeclarationPhraseAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OperationDefinitionBodyConditionalStmt__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationDefinitionBodyConditionalStmt__Group__0__Impl
	rule__OperationDefinitionBodyConditionalStmt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDefinitionBodyConditionalStmt__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationDefinitionBodyConditionalStmtAccess().getIfKeyword_0()); }
	'if'
	{ after(grammarAccess.getOperationDefinitionBodyConditionalStmtAccess().getIfKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDefinitionBodyConditionalStmt__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationDefinitionBodyConditionalStmt__Group__1__Impl
	rule__OperationDefinitionBodyConditionalStmt__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDefinitionBodyConditionalStmt__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationDefinitionBodyConditionalStmtAccess().getConditionAssignment_1()); }
	(rule__OperationDefinitionBodyConditionalStmt__ConditionAssignment_1)
	{ after(grammarAccess.getOperationDefinitionBodyConditionalStmtAccess().getConditionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDefinitionBodyConditionalStmt__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationDefinitionBodyConditionalStmt__Group__2__Impl
	rule__OperationDefinitionBodyConditionalStmt__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDefinitionBodyConditionalStmt__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationDefinitionBodyConditionalStmtAccess().getCommaKeyword_2()); }
	','
	{ after(grammarAccess.getOperationDefinitionBodyConditionalStmtAccess().getCommaKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDefinitionBodyConditionalStmt__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationDefinitionBodyConditionalStmt__Group__3__Impl
	rule__OperationDefinitionBodyConditionalStmt__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDefinitionBodyConditionalStmt__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationDefinitionBodyConditionalStmtAccess().getThenKeyword_3()); }
	'then'
	{ after(grammarAccess.getOperationDefinitionBodyConditionalStmtAccess().getThenKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDefinitionBodyConditionalStmt__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationDefinitionBodyConditionalStmt__Group__4__Impl
	rule__OperationDefinitionBodyConditionalStmt__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDefinitionBodyConditionalStmt__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationDefinitionBodyConditionalStmtAccess().getThenBodyAssignment_4()); }
	(rule__OperationDefinitionBodyConditionalStmt__ThenBodyAssignment_4)
	{ after(grammarAccess.getOperationDefinitionBodyConditionalStmtAccess().getThenBodyAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDefinitionBodyConditionalStmt__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationDefinitionBodyConditionalStmt__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDefinitionBodyConditionalStmt__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationDefinitionBodyConditionalStmtAccess().getGroup_5()); }
	(rule__OperationDefinitionBodyConditionalStmt__Group_5__0)?
	{ after(grammarAccess.getOperationDefinitionBodyConditionalStmtAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OperationDefinitionBodyConditionalStmt__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationDefinitionBodyConditionalStmt__Group_5__0__Impl
	rule__OperationDefinitionBodyConditionalStmt__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDefinitionBodyConditionalStmt__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationDefinitionBodyConditionalStmtAccess().getSemicolonKeyword_5_0()); }
	';'
	{ after(grammarAccess.getOperationDefinitionBodyConditionalStmtAccess().getSemicolonKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDefinitionBodyConditionalStmt__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationDefinitionBodyConditionalStmt__Group_5__1__Impl
	rule__OperationDefinitionBodyConditionalStmt__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDefinitionBodyConditionalStmt__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationDefinitionBodyConditionalStmtAccess().getElseKeyword_5_1()); }
	'else'
	{ after(grammarAccess.getOperationDefinitionBodyConditionalStmtAccess().getElseKeyword_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDefinitionBodyConditionalStmt__Group_5__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationDefinitionBodyConditionalStmt__Group_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDefinitionBodyConditionalStmt__Group_5__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationDefinitionBodyConditionalStmtAccess().getElseBodyAssignment_5_2()); }
	(rule__OperationDefinitionBodyConditionalStmt__ElseBodyAssignment_5_2)
	{ after(grammarAccess.getOperationDefinitionBodyConditionalStmtAccess().getElseBodyAssignment_5_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OperationParameterVariableDeclarationPhrase__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationParameterVariableDeclarationPhrase__Group__0__Impl
	rule__OperationParameterVariableDeclarationPhrase__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationParameterVariableDeclarationPhrase__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationParameterVariableDeclarationPhraseAccess().getTypeAssignment_0()); }
	(rule__OperationParameterVariableDeclarationPhrase__TypeAssignment_0)
	{ after(grammarAccess.getOperationParameterVariableDeclarationPhraseAccess().getTypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationParameterVariableDeclarationPhrase__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationParameterVariableDeclarationPhrase__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationParameterVariableDeclarationPhrase__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationParameterVariableDeclarationPhraseAccess().getNameAssignment_1()); }
	(rule__OperationParameterVariableDeclarationPhrase__NameAssignment_1)
	{ after(grammarAccess.getOperationParameterVariableDeclarationPhraseAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InstanceRefPhrase__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InstanceRefPhrase__Group_1__0__Impl
	rule__InstanceRefPhrase__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceRefPhrase__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstanceRefPhraseAccess().getTheKeyword_1_0()); }
	'the'
	{ after(grammarAccess.getInstanceRefPhraseAccess().getTheKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceRefPhrase__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InstanceRefPhrase__Group_1__1__Impl
	rule__InstanceRefPhrase__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceRefPhrase__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstanceRefPhraseAccess().getClassAssignment_1_1()); }
	(rule__InstanceRefPhrase__ClassAssignment_1_1)
	{ after(grammarAccess.getInstanceRefPhraseAccess().getClassAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceRefPhrase__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InstanceRefPhrase__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceRefPhrase__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstanceRefPhraseAccess().getFAssignment_1_2()); }
	(rule__InstanceRefPhrase__FAssignment_1_2)?
	{ after(grammarAccess.getInstanceRefPhraseAccess().getFAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InstanceIndirectRefPhrase__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InstanceIndirectRefPhrase__Group__0__Impl
	rule__InstanceIndirectRefPhrase__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceIndirectRefPhrase__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstanceIndirectRefPhraseAccess().getInKeyword_0()); }
	'in'
	{ after(grammarAccess.getInstanceIndirectRefPhraseAccess().getInKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceIndirectRefPhrase__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InstanceIndirectRefPhrase__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceIndirectRefPhrase__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstanceIndirectRefPhraseAccess().getParentAssignment_1()); }
	(rule__InstanceIndirectRefPhrase__ParentAssignment_1)
	{ after(grammarAccess.getInstanceIndirectRefPhraseAccess().getParentAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InstanceBuiltinValueIntegerPhrase__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InstanceBuiltinValueIntegerPhrase__Group__0__Impl
	rule__InstanceBuiltinValueIntegerPhrase__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceBuiltinValueIntegerPhrase__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstanceBuiltinValueIntegerPhraseAccess().getInstanceBuiltinValueIntegerPhraseAction_0()); }
	()
	{ after(grammarAccess.getInstanceBuiltinValueIntegerPhraseAccess().getInstanceBuiltinValueIntegerPhraseAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceBuiltinValueIntegerPhrase__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InstanceBuiltinValueIntegerPhrase__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceBuiltinValueIntegerPhrase__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstanceBuiltinValueIntegerPhraseAccess().getVAssignment_1()); }
	(rule__InstanceBuiltinValueIntegerPhrase__VAssignment_1)
	{ after(grammarAccess.getInstanceBuiltinValueIntegerPhraseAccess().getVAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InstanceBuiltinValueStringPhrase__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InstanceBuiltinValueStringPhrase__Group__0__Impl
	rule__InstanceBuiltinValueStringPhrase__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceBuiltinValueStringPhrase__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstanceBuiltinValueStringPhraseAccess().getInstanceBuiltinValueStringPhraseAction_0()); }
	()
	{ after(grammarAccess.getInstanceBuiltinValueStringPhraseAccess().getInstanceBuiltinValueStringPhraseAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceBuiltinValueStringPhrase__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InstanceBuiltinValueStringPhrase__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceBuiltinValueStringPhrase__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstanceBuiltinValueStringPhraseAccess().getVAssignment_1()); }
	(rule__InstanceBuiltinValueStringPhrase__VAssignment_1)
	{ after(grammarAccess.getInstanceBuiltinValueStringPhraseAccess().getVAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__StmtAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getStmtStmtParserRuleCall_0()); }
		ruleStmt
		{ after(grammarAccess.getModelAccess().getStmtStmtParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistenceDefiniteStmt__DefiniteAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExistenceDefiniteStmtAccess().getDefiniteExistenceDefinitePhraseParserRuleCall_1_0()); }
		ruleExistenceDefinitePhrase
		{ after(grammarAccess.getExistenceDefiniteStmtAccess().getDefiniteExistenceDefinitePhraseParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistenceDefinitePhrase__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExistenceDefinitePhraseAccess().getNameIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getExistenceDefinitePhraseAccess().getNameIDTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistenceDefiniteRefPhrase__RefAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExistenceDefiniteRefPhraseAccess().getRefExistenceDefinitePhraseCrossReference_1_0()); }
		(
			{ before(grammarAccess.getExistenceDefiniteRefPhraseAccess().getRefExistenceDefinitePhraseIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getExistenceDefiniteRefPhraseAccess().getRefExistenceDefinitePhraseIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getExistenceDefiniteRefPhraseAccess().getRefExistenceDefinitePhraseCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistenceDefiniteRefListPhrase__ElementsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExistenceDefiniteRefListPhraseAccess().getElementsExistenceDefiniteRefPhraseParserRuleCall_0_0()); }
		ruleExistenceDefiniteRefPhrase
		{ after(grammarAccess.getExistenceDefiniteRefListPhraseAccess().getElementsExistenceDefiniteRefPhraseParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistenceDefiniteRefListPhrase__ElementsAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExistenceDefiniteRefListPhraseAccess().getElementsExistenceDefiniteRefPhraseParserRuleCall_1_2_0()); }
		ruleExistenceDefiniteRefPhrase
		{ after(grammarAccess.getExistenceDefiniteRefListPhraseAccess().getElementsExistenceDefiniteRefPhraseParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistenceIndefiniteStmt__PluralAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExistenceIndefiniteStmtAccess().getPluralExistencePluralIndefinitePhraseParserRuleCall_1_0()); }
		ruleExistencePluralIndefinitePhrase
		{ after(grammarAccess.getExistenceIndefiniteStmtAccess().getPluralExistencePluralIndefinitePhraseParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistenceIndefiniteStmt__SingularAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExistenceIndefiniteStmtAccess().getSingularExistenceSingularIndefinitePhraseParserRuleCall_3_0()); }
		ruleExistenceSingularIndefinitePhrase
		{ after(grammarAccess.getExistenceIndefiniteStmtAccess().getSingularExistenceSingularIndefinitePhraseParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistenceSingularIndefinitePhrase__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExistenceSingularIndefinitePhraseAccess().getNameIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getExistenceSingularIndefinitePhraseAccess().getNameIDTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistencePluralIndefinitePhrase__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExistencePluralIndefinitePhraseAccess().getNameIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getExistencePluralIndefinitePhraseAccess().getNameIDTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistenceSingularIndefiniteRefPhrase__RefAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExistenceSingularIndefiniteRefPhraseAccess().getRefExistenceSingularIndefinitePhraseCrossReference_1_0()); }
		(
			{ before(grammarAccess.getExistenceSingularIndefiniteRefPhraseAccess().getRefExistenceSingularIndefinitePhraseIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getExistenceSingularIndefiniteRefPhraseAccess().getRefExistenceSingularIndefinitePhraseIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getExistenceSingularIndefiniteRefPhraseAccess().getRefExistenceSingularIndefinitePhraseCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistencePluralIndefiniteRefPhrase__RefAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExistencePluralIndefiniteRefPhraseAccess().getRefExistencePluralIndefinitePhraseCrossReference_1_0()); }
		(
			{ before(grammarAccess.getExistencePluralIndefiniteRefPhraseAccess().getRefExistencePluralIndefinitePhraseIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getExistencePluralIndefiniteRefPhraseAccess().getRefExistencePluralIndefinitePhraseIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getExistencePluralIndefiniteRefPhraseAccess().getRefExistencePluralIndefinitePhraseCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistenceSingularIndefiniteRefListPhrase__ElementsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExistenceSingularIndefiniteRefListPhraseAccess().getElementsExistenceSingularIndefiniteRefPhraseParserRuleCall_0_0()); }
		ruleExistenceSingularIndefiniteRefPhrase
		{ after(grammarAccess.getExistenceSingularIndefiniteRefListPhraseAccess().getElementsExistenceSingularIndefiniteRefPhraseParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistenceSingularIndefiniteRefListPhrase__ElementsAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExistenceSingularIndefiniteRefListPhraseAccess().getElementsExistenceSingularIndefiniteRefPhraseParserRuleCall_1_2_0()); }
		ruleExistenceSingularIndefiniteRefPhrase
		{ after(grammarAccess.getExistenceSingularIndefiniteRefListPhraseAccess().getElementsExistenceSingularIndefiniteRefPhraseParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistencePluralIndefiniteRefListPhrase__ElementsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExistencePluralIndefiniteRefListPhraseAccess().getElementsExistencePluralIndefiniteRefPhraseParserRuleCall_0_0()); }
		ruleExistencePluralIndefiniteRefPhrase
		{ after(grammarAccess.getExistencePluralIndefiniteRefListPhraseAccess().getElementsExistencePluralIndefiniteRefPhraseParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistencePluralIndefiniteRefListPhrase__ElementsAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExistencePluralIndefiniteRefListPhraseAccess().getElementsExistencePluralIndefiniteRefPhraseParserRuleCall_1_2_0()); }
		ruleExistencePluralIndefiniteRefPhrase
		{ after(grammarAccess.getExistencePluralIndefiniteRefListPhraseAccess().getElementsExistencePluralIndefiniteRefPhraseParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositionStmt__ParentAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompositionStmtAccess().getParentExistenceSingularRefListPhraseParserRuleCall_0_0()); }
		ruleExistenceSingularRefListPhrase
		{ after(grammarAccess.getCompositionStmtAccess().getParentExistenceSingularRefListPhraseParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositionStmt__ChildrenAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompositionStmtAccess().getChildrenExistenceAnyRefListPhraseParserRuleCall_2_0()); }
		ruleExistenceAnyRefListPhrase
		{ after(grammarAccess.getCompositionStmtAccess().getChildrenExistenceAnyRefListPhraseParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InheritanceStmt__ClassAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInheritanceStmtAccess().getClassExistenceSingularRefListPhraseParserRuleCall_0_0()); }
		ruleExistenceSingularRefListPhrase
		{ after(grammarAccess.getInheritanceStmtAccess().getClassExistenceSingularRefListPhraseParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InheritanceStmt__SuperclassAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInheritanceStmtAccess().getSuperclassExistenceSingularRefListPhraseParserRuleCall_2_0()); }
		ruleExistenceSingularRefListPhrase
		{ after(grammarAccess.getInheritanceStmtAccess().getSuperclassExistenceSingularRefListPhraseParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDeclarionHeaderStmt__ParametersAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperationDeclarionHeaderStmtAccess().getParametersOperationParameterPhraseParserRuleCall_0()); }
		ruleOperationParameterPhrase
		{ after(grammarAccess.getOperationDeclarionHeaderStmtAccess().getParametersOperationParameterPhraseParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDefinitionStmt__HeaderAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperationDefinitionStmtAccess().getHeaderOperationDeclarionHeaderStmtParserRuleCall_1_0()); }
		ruleOperationDeclarionHeaderStmt
		{ after(grammarAccess.getOperationDefinitionStmtAccess().getHeaderOperationDeclarionHeaderStmtParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDefinitionStmt__BodyAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperationDefinitionStmtAccess().getBodyOperationDefinitionBodyStmtsParserRuleCall_4_0()); }
		ruleOperationDefinitionBodyStmts
		{ after(grammarAccess.getOperationDefinitionStmtAccess().getBodyOperationDefinitionBodyStmtsParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDefinitionBodyStmts__StmtsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperationDefinitionBodyStmtsAccess().getStmtsOperationDefinitionBodyStmtParserRuleCall_0_0()); }
		ruleOperationDefinitionBodyStmt
		{ after(grammarAccess.getOperationDefinitionBodyStmtsAccess().getStmtsOperationDefinitionBodyStmtParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDefinitionBodyStmts__StmtsAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperationDefinitionBodyStmtsAccess().getStmtsOperationDefinitionBodyStmtParserRuleCall_1_1_0()); }
		ruleOperationDefinitionBodyStmt
		{ after(grammarAccess.getOperationDefinitionBodyStmtsAccess().getStmtsOperationDefinitionBodyStmtParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDefinitionBodyFunctionCallPhrase__ArgumentsAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperationDefinitionBodyFunctionCallPhraseAccess().getArgumentsOperationDefinitionBodyFunctionCallArgumentsPhraseParserRuleCall_0()); }
		ruleOperationDefinitionBodyFunctionCallArgumentsPhrase
		{ after(grammarAccess.getOperationDefinitionBodyFunctionCallPhraseAccess().getArgumentsOperationDefinitionBodyFunctionCallArgumentsPhraseParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDefinitionBodyFunctionCallInRefsRefPhrase__RefAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperationDefinitionBodyFunctionCallInRefsRefPhraseAccess().getRefOperationDefinitionBodyFunctionCallInRefsPhraseCrossReference_0()); }
		(
			{ before(grammarAccess.getOperationDefinitionBodyFunctionCallInRefsRefPhraseAccess().getRefOperationDefinitionBodyFunctionCallInRefsPhraseIDTerminalRuleCall_0_1()); }
			RULE_ID
			{ after(grammarAccess.getOperationDefinitionBodyFunctionCallInRefsRefPhraseAccess().getRefOperationDefinitionBodyFunctionCallInRefsPhraseIDTerminalRuleCall_0_1()); }
		)
		{ after(grammarAccess.getOperationDefinitionBodyFunctionCallInRefsRefPhraseAccess().getRefOperationDefinitionBodyFunctionCallInRefsPhraseCrossReference_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDefinitionBodyVariableDeclarationPhrase__TypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperationDefinitionBodyVariableDeclarationPhraseAccess().getTypeExistenceSingularIndefinitePhraseCrossReference_1_0()); }
		(
			{ before(grammarAccess.getOperationDefinitionBodyVariableDeclarationPhraseAccess().getTypeExistenceSingularIndefinitePhraseIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getOperationDefinitionBodyVariableDeclarationPhraseAccess().getTypeExistenceSingularIndefinitePhraseIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getOperationDefinitionBodyVariableDeclarationPhraseAccess().getTypeExistenceSingularIndefinitePhraseCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDefinitionBodyVariableDeclarationPhrase__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperationDefinitionBodyVariableDeclarationPhraseAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getOperationDefinitionBodyVariableDeclarationPhraseAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDefinitionBodyConditionalStmt__ConditionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperationDefinitionBodyConditionalStmtAccess().getConditionOperationDefinitionBodyFunctionCallPhraseParserRuleCall_1_0()); }
		ruleOperationDefinitionBodyFunctionCallPhrase
		{ after(grammarAccess.getOperationDefinitionBodyConditionalStmtAccess().getConditionOperationDefinitionBodyFunctionCallPhraseParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDefinitionBodyConditionalStmt__ThenBodyAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperationDefinitionBodyConditionalStmtAccess().getThenBodyOperationDefinitionBodyStmtsParserRuleCall_4_0()); }
		ruleOperationDefinitionBodyStmts
		{ after(grammarAccess.getOperationDefinitionBodyConditionalStmtAccess().getThenBodyOperationDefinitionBodyStmtsParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDefinitionBodyConditionalStmt__ElseBodyAssignment_5_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperationDefinitionBodyConditionalStmtAccess().getElseBodyOperationDefinitionBodyStmtsParserRuleCall_5_2_0()); }
		ruleOperationDefinitionBodyStmts
		{ after(grammarAccess.getOperationDefinitionBodyConditionalStmtAccess().getElseBodyOperationDefinitionBodyStmtsParserRuleCall_5_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationParameterVariableDeclarationPhrase__TypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperationParameterVariableDeclarationPhraseAccess().getTypeExistenceIndefiniteRefPhraseParserRuleCall_0_0()); }
		ruleExistenceIndefiniteRefPhrase
		{ after(grammarAccess.getOperationParameterVariableDeclarationPhraseAccess().getTypeExistenceIndefiniteRefPhraseParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationParameterVariableDeclarationPhrase__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperationParameterVariableDeclarationPhraseAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getOperationParameterVariableDeclarationPhraseAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationParameterConnectionPhrase__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperationParameterConnectionPhraseAccess().getNameAlternatives_0()); }
		(rule__OperationParameterConnectionPhrase__NameAlternatives_0)
		{ after(grammarAccess.getOperationParameterConnectionPhraseAccess().getNameAlternatives_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationParameterConnectionBuiltinRefPhrase__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperationParameterConnectionBuiltinRefPhraseAccess().getNameAlternatives_0()); }
		(rule__OperationParameterConnectionBuiltinRefPhrase__NameAlternatives_0)
		{ after(grammarAccess.getOperationParameterConnectionBuiltinRefPhraseAccess().getNameAlternatives_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceRefPhrase__FAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInstanceRefPhraseAccess().getFInstanceDirectRefPhraseParserRuleCall_0_0()); }
		ruleInstanceDirectRefPhrase
		{ after(grammarAccess.getInstanceRefPhraseAccess().getFInstanceDirectRefPhraseParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceRefPhrase__ClassAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInstanceRefPhraseAccess().getClassExistenceAnyPhraseCrossReference_1_1_0()); }
		(
			{ before(grammarAccess.getInstanceRefPhraseAccess().getClassExistenceAnyPhraseIDTerminalRuleCall_1_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getInstanceRefPhraseAccess().getClassExistenceAnyPhraseIDTerminalRuleCall_1_1_0_1()); }
		)
		{ after(grammarAccess.getInstanceRefPhraseAccess().getClassExistenceAnyPhraseCrossReference_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceRefPhrase__FAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInstanceRefPhraseAccess().getFAlternatives_1_2_0()); }
		(rule__InstanceRefPhrase__FAlternatives_1_2_0)
		{ after(grammarAccess.getInstanceRefPhraseAccess().getFAlternatives_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceDirectRefPhrase__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInstanceDirectRefPhraseAccess().getValueInstanceBuiltinValuePhraseParserRuleCall_0()); }
		ruleInstanceBuiltinValuePhrase
		{ after(grammarAccess.getInstanceDirectRefPhraseAccess().getValueInstanceBuiltinValuePhraseParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceIndirectRefPhrase__ParentAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInstanceIndirectRefPhraseAccess().getParentOperationDefinitionBodyFunctionCallInRefsObjectsPhraseCrossReference_1_0()); }
		(
			{ before(grammarAccess.getInstanceIndirectRefPhraseAccess().getParentOperationDefinitionBodyFunctionCallInRefsObjectsPhraseIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getInstanceIndirectRefPhraseAccess().getParentOperationDefinitionBodyFunctionCallInRefsObjectsPhraseIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getInstanceIndirectRefPhraseAccess().getParentOperationDefinitionBodyFunctionCallInRefsObjectsPhraseCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceBuiltinValueIntegerPhrase__VAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInstanceBuiltinValueIntegerPhraseAccess().getVINTTerminalRuleCall_1_0()); }
		RULE_INT
		{ after(grammarAccess.getInstanceBuiltinValueIntegerPhraseAccess().getVINTTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceBuiltinValueStringPhrase__VAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInstanceBuiltinValueStringPhraseAccess().getVSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getInstanceBuiltinValueStringPhraseAccess().getVSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;

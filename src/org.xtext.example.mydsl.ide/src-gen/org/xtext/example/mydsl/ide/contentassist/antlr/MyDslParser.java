/*
 * generated by Xtext 2.25.0
 */
package org.xtext.example.mydsl.ide.contentassist.antlr;

import com.google.common.collect.ImmutableMap;
import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;
import org.xtext.example.mydsl.ide.contentassist.antlr.internal.InternalMyDslParser;
import org.xtext.example.mydsl.services.MyDslGrammarAccess;

public class MyDslParser extends AbstractContentAssistParser {

	@Singleton
	public static final class NameMappings {
		
		private final Map<AbstractElement, String> mappings;
		
		@Inject
		public NameMappings(MyDslGrammarAccess grammarAccess) {
			ImmutableMap.Builder<AbstractElement, String> builder = ImmutableMap.builder();
			init(builder, grammarAccess);
			this.mappings = builder.build();
		}
		
		public String getRuleName(AbstractElement element) {
			return mappings.get(element);
		}
		
		private static void init(ImmutableMap.Builder<AbstractElement, String> builder, MyDslGrammarAccess grammarAccess) {
			builder.put(grammarAccess.getStmtAccess().getAlternatives_0(), "rule__Stmt__Alternatives_0");
			builder.put(grammarAccess.getExistenceStmtAccess().getAlternatives(), "rule__ExistenceStmt__Alternatives");
			builder.put(grammarAccess.getExistenceSingularIndefiniteRefPhraseAccess().getAlternatives_0(), "rule__ExistenceSingularIndefiniteRefPhrase__Alternatives_0");
			builder.put(grammarAccess.getExistencePluralIndefiniteRefPhraseAccess().getAlternatives_0(), "rule__ExistencePluralIndefiniteRefPhrase__Alternatives_0");
			builder.put(grammarAccess.getExistenceSingularRefListPhraseAccess().getAlternatives(), "rule__ExistenceSingularRefListPhrase__Alternatives");
			builder.put(grammarAccess.getExistenceAnyRefListPhraseAccess().getAlternatives(), "rule__ExistenceAnyRefListPhrase__Alternatives");
			builder.put(grammarAccess.getExistenceIndefiniteRefPhraseAccess().getAlternatives(), "rule__ExistenceIndefiniteRefPhrase__Alternatives");
			builder.put(grammarAccess.getExistenceAnyPhraseAccess().getAlternatives(), "rule__ExistenceAnyPhrase__Alternatives");
			builder.put(grammarAccess.getCompositionStmtAccess().getAlternatives_1(), "rule__CompositionStmt__Alternatives_1");
			builder.put(grammarAccess.getInheritanceStmtAccess().getAlternatives_1(), "rule__InheritanceStmt__Alternatives_1");
			builder.put(grammarAccess.getOperationStmtAccess().getAlternatives(), "rule__OperationStmt__Alternatives");
			builder.put(grammarAccess.getOperationDeclarationStmtAccess().getAlternatives_0(), "rule__OperationDeclarationStmt__Alternatives_0");
			builder.put(grammarAccess.getOperationParameterPhraseAccess().getAlternatives(), "rule__OperationParameterPhrase__Alternatives");
			builder.put(grammarAccess.getOperationDefinitionBodyStmtAccess().getAlternatives(), "rule__OperationDefinitionBodyStmt__Alternatives");
			builder.put(grammarAccess.getOperationDefinitionBodyUnconditionalPhraseAccess().getAlternatives(), "rule__OperationDefinitionBodyUnconditionalPhrase__Alternatives");
			builder.put(grammarAccess.getOperationDefinitionBodyFunctionCallArgumentsPhraseAccess().getAlternatives(), "rule__OperationDefinitionBodyFunctionCallArgumentsPhrase__Alternatives");
			builder.put(grammarAccess.getOperationDefinitionBodyFunctionCallInRefsPhraseAccess().getAlternatives(), "rule__OperationDefinitionBodyFunctionCallInRefsPhrase__Alternatives");
			builder.put(grammarAccess.getOperationDefinitionBodyFunctionCallInRefsObjectsPhraseAccess().getAlternatives(), "rule__OperationDefinitionBodyFunctionCallInRefsObjectsPhrase__Alternatives");
			builder.put(grammarAccess.getOperationParameterConnectionPhraseAccess().getNameAlternatives_0(), "rule__OperationParameterConnectionPhrase__NameAlternatives_0");
			builder.put(grammarAccess.getOperationParameterConnectionBuiltinRefPhraseAccess().getNameAlternatives_0(), "rule__OperationParameterConnectionBuiltinRefPhrase__NameAlternatives_0");
			builder.put(grammarAccess.getInstanceRefPhraseAccess().getAlternatives(), "rule__InstanceRefPhrase__Alternatives");
			builder.put(grammarAccess.getInstanceRefPhraseAccess().getFAlternatives_1_2_0(), "rule__InstanceRefPhrase__FAlternatives_1_2_0");
			builder.put(grammarAccess.getInstanceBuiltinValuePhraseAccess().getAlternatives(), "rule__InstanceBuiltinValuePhrase__Alternatives");
			builder.put(grammarAccess.getStmtAccess().getGroup(), "rule__Stmt__Group__0");
			builder.put(grammarAccess.getExistenceDefiniteStmtAccess().getGroup(), "rule__ExistenceDefiniteStmt__Group__0");
			builder.put(grammarAccess.getExistenceDefiniteRefPhraseAccess().getGroup(), "rule__ExistenceDefiniteRefPhrase__Group__0");
			builder.put(grammarAccess.getExistenceDefiniteRefListPhraseAccess().getGroup(), "rule__ExistenceDefiniteRefListPhrase__Group__0");
			builder.put(grammarAccess.getExistenceDefiniteRefListPhraseAccess().getGroup_1(), "rule__ExistenceDefiniteRefListPhrase__Group_1__0");
			builder.put(grammarAccess.getExistenceIndefiniteStmtAccess().getGroup(), "rule__ExistenceIndefiniteStmt__Group__0");
			builder.put(grammarAccess.getExistenceSingularIndefiniteRefPhraseAccess().getGroup(), "rule__ExistenceSingularIndefiniteRefPhrase__Group__0");
			builder.put(grammarAccess.getExistencePluralIndefiniteRefPhraseAccess().getGroup(), "rule__ExistencePluralIndefiniteRefPhrase__Group__0");
			builder.put(grammarAccess.getExistenceSingularIndefiniteRefListPhraseAccess().getGroup(), "rule__ExistenceSingularIndefiniteRefListPhrase__Group__0");
			builder.put(grammarAccess.getExistenceSingularIndefiniteRefListPhraseAccess().getGroup_1(), "rule__ExistenceSingularIndefiniteRefListPhrase__Group_1__0");
			builder.put(grammarAccess.getExistencePluralIndefiniteRefListPhraseAccess().getGroup(), "rule__ExistencePluralIndefiniteRefListPhrase__Group__0");
			builder.put(grammarAccess.getExistencePluralIndefiniteRefListPhraseAccess().getGroup_1(), "rule__ExistencePluralIndefiniteRefListPhrase__Group_1__0");
			builder.put(grammarAccess.getCompositionStmtAccess().getGroup(), "rule__CompositionStmt__Group__0");
			builder.put(grammarAccess.getInheritanceStmtAccess().getGroup(), "rule__InheritanceStmt__Group__0");
			builder.put(grammarAccess.getOperationDeclarationStmtAccess().getGroup(), "rule__OperationDeclarationStmt__Group__0");
			builder.put(grammarAccess.getOperationDefinitionStmtAccess().getGroup(), "rule__OperationDefinitionStmt__Group__0");
			builder.put(grammarAccess.getOperationDefinitionBodyStmtsAccess().getGroup(), "rule__OperationDefinitionBodyStmts__Group__0");
			builder.put(grammarAccess.getOperationDefinitionBodyStmtsAccess().getGroup_1(), "rule__OperationDefinitionBodyStmts__Group_1__0");
			builder.put(grammarAccess.getOperationDefinitionBodyVariableDeclarationPhraseAccess().getGroup(), "rule__OperationDefinitionBodyVariableDeclarationPhrase__Group__0");
			builder.put(grammarAccess.getOperationDefinitionBodyConditionalStmtAccess().getGroup(), "rule__OperationDefinitionBodyConditionalStmt__Group__0");
			builder.put(grammarAccess.getOperationDefinitionBodyConditionalStmtAccess().getGroup_5(), "rule__OperationDefinitionBodyConditionalStmt__Group_5__0");
			builder.put(grammarAccess.getOperationParameterVariableDeclarationPhraseAccess().getGroup(), "rule__OperationParameterVariableDeclarationPhrase__Group__0");
			builder.put(grammarAccess.getInstanceRefPhraseAccess().getGroup_1(), "rule__InstanceRefPhrase__Group_1__0");
			builder.put(grammarAccess.getInstanceIndirectRefPhraseAccess().getGroup(), "rule__InstanceIndirectRefPhrase__Group__0");
			builder.put(grammarAccess.getInstanceBuiltinValueIntegerPhraseAccess().getGroup(), "rule__InstanceBuiltinValueIntegerPhrase__Group__0");
			builder.put(grammarAccess.getInstanceBuiltinValueStringPhraseAccess().getGroup(), "rule__InstanceBuiltinValueStringPhrase__Group__0");
			builder.put(grammarAccess.getModelAccess().getStmtAssignment(), "rule__Model__StmtAssignment");
			builder.put(grammarAccess.getExistenceDefiniteStmtAccess().getDefiniteAssignment_1(), "rule__ExistenceDefiniteStmt__DefiniteAssignment_1");
			builder.put(grammarAccess.getExistenceDefinitePhraseAccess().getNameAssignment(), "rule__ExistenceDefinitePhrase__NameAssignment");
			builder.put(grammarAccess.getExistenceDefiniteRefPhraseAccess().getRefAssignment_1(), "rule__ExistenceDefiniteRefPhrase__RefAssignment_1");
			builder.put(grammarAccess.getExistenceDefiniteRefListPhraseAccess().getElementsAssignment_0(), "rule__ExistenceDefiniteRefListPhrase__ElementsAssignment_0");
			builder.put(grammarAccess.getExistenceDefiniteRefListPhraseAccess().getElementsAssignment_1_2(), "rule__ExistenceDefiniteRefListPhrase__ElementsAssignment_1_2");
			builder.put(grammarAccess.getExistenceIndefiniteStmtAccess().getPluralAssignment_1(), "rule__ExistenceIndefiniteStmt__PluralAssignment_1");
			builder.put(grammarAccess.getExistenceIndefiniteStmtAccess().getSingularAssignment_3(), "rule__ExistenceIndefiniteStmt__SingularAssignment_3");
			builder.put(grammarAccess.getExistenceSingularIndefinitePhraseAccess().getNameAssignment(), "rule__ExistenceSingularIndefinitePhrase__NameAssignment");
			builder.put(grammarAccess.getExistencePluralIndefinitePhraseAccess().getNameAssignment(), "rule__ExistencePluralIndefinitePhrase__NameAssignment");
			builder.put(grammarAccess.getExistenceSingularIndefiniteRefPhraseAccess().getRefAssignment_1(), "rule__ExistenceSingularIndefiniteRefPhrase__RefAssignment_1");
			builder.put(grammarAccess.getExistencePluralIndefiniteRefPhraseAccess().getRefAssignment_1(), "rule__ExistencePluralIndefiniteRefPhrase__RefAssignment_1");
			builder.put(grammarAccess.getExistenceSingularIndefiniteRefListPhraseAccess().getElementsAssignment_0(), "rule__ExistenceSingularIndefiniteRefListPhrase__ElementsAssignment_0");
			builder.put(grammarAccess.getExistenceSingularIndefiniteRefListPhraseAccess().getElementsAssignment_1_2(), "rule__ExistenceSingularIndefiniteRefListPhrase__ElementsAssignment_1_2");
			builder.put(grammarAccess.getExistencePluralIndefiniteRefListPhraseAccess().getElementsAssignment_0(), "rule__ExistencePluralIndefiniteRefListPhrase__ElementsAssignment_0");
			builder.put(grammarAccess.getExistencePluralIndefiniteRefListPhraseAccess().getElementsAssignment_1_2(), "rule__ExistencePluralIndefiniteRefListPhrase__ElementsAssignment_1_2");
			builder.put(grammarAccess.getCompositionStmtAccess().getParentAssignment_0(), "rule__CompositionStmt__ParentAssignment_0");
			builder.put(grammarAccess.getCompositionStmtAccess().getChildrenAssignment_2(), "rule__CompositionStmt__ChildrenAssignment_2");
			builder.put(grammarAccess.getInheritanceStmtAccess().getClassAssignment_0(), "rule__InheritanceStmt__ClassAssignment_0");
			builder.put(grammarAccess.getInheritanceStmtAccess().getSuperclassAssignment_2(), "rule__InheritanceStmt__SuperclassAssignment_2");
			builder.put(grammarAccess.getOperationDeclarionHeaderStmtAccess().getParametersAssignment(), "rule__OperationDeclarionHeaderStmt__ParametersAssignment");
			builder.put(grammarAccess.getOperationDefinitionStmtAccess().getHeaderAssignment_1(), "rule__OperationDefinitionStmt__HeaderAssignment_1");
			builder.put(grammarAccess.getOperationDefinitionStmtAccess().getBodyAssignment_4(), "rule__OperationDefinitionStmt__BodyAssignment_4");
			builder.put(grammarAccess.getOperationDefinitionBodyStmtsAccess().getStmtsAssignment_0(), "rule__OperationDefinitionBodyStmts__StmtsAssignment_0");
			builder.put(grammarAccess.getOperationDefinitionBodyStmtsAccess().getStmtsAssignment_1_1(), "rule__OperationDefinitionBodyStmts__StmtsAssignment_1_1");
			builder.put(grammarAccess.getOperationDefinitionBodyFunctionCallPhraseAccess().getArgumentsAssignment(), "rule__OperationDefinitionBodyFunctionCallPhrase__ArgumentsAssignment");
			builder.put(grammarAccess.getOperationDefinitionBodyFunctionCallInRefsRefPhraseAccess().getRefAssignment(), "rule__OperationDefinitionBodyFunctionCallInRefsRefPhrase__RefAssignment");
			builder.put(grammarAccess.getOperationDefinitionBodyVariableDeclarationPhraseAccess().getTypeAssignment_1(), "rule__OperationDefinitionBodyVariableDeclarationPhrase__TypeAssignment_1");
			builder.put(grammarAccess.getOperationDefinitionBodyVariableDeclarationPhraseAccess().getNameAssignment_2(), "rule__OperationDefinitionBodyVariableDeclarationPhrase__NameAssignment_2");
			builder.put(grammarAccess.getOperationDefinitionBodyConditionalStmtAccess().getConditionAssignment_1(), "rule__OperationDefinitionBodyConditionalStmt__ConditionAssignment_1");
			builder.put(grammarAccess.getOperationDefinitionBodyConditionalStmtAccess().getThenBodyAssignment_4(), "rule__OperationDefinitionBodyConditionalStmt__ThenBodyAssignment_4");
			builder.put(grammarAccess.getOperationDefinitionBodyConditionalStmtAccess().getElseBodyAssignment_5_2(), "rule__OperationDefinitionBodyConditionalStmt__ElseBodyAssignment_5_2");
			builder.put(grammarAccess.getOperationParameterVariableDeclarationPhraseAccess().getTypeAssignment_0(), "rule__OperationParameterVariableDeclarationPhrase__TypeAssignment_0");
			builder.put(grammarAccess.getOperationParameterVariableDeclarationPhraseAccess().getNameAssignment_1(), "rule__OperationParameterVariableDeclarationPhrase__NameAssignment_1");
			builder.put(grammarAccess.getOperationParameterConnectionPhraseAccess().getNameAssignment(), "rule__OperationParameterConnectionPhrase__NameAssignment");
			builder.put(grammarAccess.getOperationParameterConnectionBuiltinRefPhraseAccess().getNameAssignment(), "rule__OperationParameterConnectionBuiltinRefPhrase__NameAssignment");
			builder.put(grammarAccess.getInstanceRefPhraseAccess().getFAssignment_0(), "rule__InstanceRefPhrase__FAssignment_0");
			builder.put(grammarAccess.getInstanceRefPhraseAccess().getClassAssignment_1_1(), "rule__InstanceRefPhrase__ClassAssignment_1_1");
			builder.put(grammarAccess.getInstanceRefPhraseAccess().getFAssignment_1_2(), "rule__InstanceRefPhrase__FAssignment_1_2");
			builder.put(grammarAccess.getInstanceDirectRefPhraseAccess().getValueAssignment(), "rule__InstanceDirectRefPhrase__ValueAssignment");
			builder.put(grammarAccess.getInstanceIndirectRefPhraseAccess().getParentAssignment_1(), "rule__InstanceIndirectRefPhrase__ParentAssignment_1");
			builder.put(grammarAccess.getInstanceBuiltinValueIntegerPhraseAccess().getVAssignment_1(), "rule__InstanceBuiltinValueIntegerPhrase__VAssignment_1");
			builder.put(grammarAccess.getInstanceBuiltinValueStringPhraseAccess().getVAssignment_1(), "rule__InstanceBuiltinValueStringPhrase__VAssignment_1");
		}
	}
	
	@Inject
	private NameMappings nameMappings;

	@Inject
	private MyDslGrammarAccess grammarAccess;

	@Override
	protected InternalMyDslParser createParser() {
		InternalMyDslParser result = new InternalMyDslParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		return nameMappings.getRuleName(element);
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public MyDslGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(MyDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
	
	public NameMappings getNameMappings() {
		return nameMappings;
	}
	
	public void setNameMappings(NameMappings nameMappings) {
		this.nameMappings = nameMappings;
	}
}
